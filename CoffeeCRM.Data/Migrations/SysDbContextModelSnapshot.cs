// <auto-generated />
using System;
using CoffeeCRM.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeCRM.Data.Migrations
{
    [DbContext(typeof(SysDbContext))]
    partial class SysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoffeeCRM.Data.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.AccountActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ActivityCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountActivity", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("WorkHours")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Attendance", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.CashFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("FlowType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("CashFlow", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DebtCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DebtName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsPaId")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaIdAt")
                        .HasColumnType("datetime");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Debt", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DishCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DishCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("DishCategoryId");

                    b.ToTable("Dish", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DishCategoryCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DishCateogryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("DishCategory", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DishOrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DishOrderStatusId");

                    b.HasIndex("TableId");

                    b.ToTable("DishOrder", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("DishOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DishId");

                    b.HasIndex("DishOrderId");

                    b.ToTable("DishOrderDetail", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DishOrderStatusCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DishOrderStatusName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("DishOrderStatus", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.FinancialTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Period")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TargetProfit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TargetRevenue")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.ToTable("FinancialTarget", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("AveragePrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IngredientCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("IngredientCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SelfLife")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("UnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientCategoryId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UnitId");

                    b.ToTable("Ingredient", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.IngredientCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("IngredientCategoryCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IngredientCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("IngredientCategory", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.InventoryAudit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("AuditCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("AuditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Auditor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryAudit", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.InventoryDiscrepancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int>("ActualQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DiscrepancyReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ExpectedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("InventoryAuditId")
                        .HasColumnType("int");

                    b.Property<int>("StockLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InventoryAuditId");

                    b.HasIndex("StockLevelId");

                    b.ToTable("InventoryDiscrepancy", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("InvoiceCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalGuest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TableId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ApproveTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("NotificationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("NotificationStatusId");

                    b.HasIndex("SenderId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.NotificationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("NotificationStatus", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PurchaseOrderCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("PurchaseOrder", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.PurchaseOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetail", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("RoleCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StockLevel", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StockTransactionCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("StockTransaction", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockTransactionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockLevelId")
                        .HasColumnType("int");

                    b.Property<int>("StockTransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StockLevelId");

                    b.HasIndex("StockTransactionId");

                    b.ToTable("StockTransactionDetail", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Supplier", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TableCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TableStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Table", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.TableBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CheckinTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TableId");

                    b.ToTable("TableBooking", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Unit", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Account", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Account__RoleId__08B54D69");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.AccountActivity", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("AccountActivities")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__AccountAc__Accou__09A971A2");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Attendance", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("Attendances")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Attendanc__Accou__0A9D95DB");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.CashFlow", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("CashFlows")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__CashFlow__Accoun__0B91BA14");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Debt", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Supplier", "Supplier")
                        .WithMany("Debts")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK__Debt__SupplierId__0C85DE4D");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Dish", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.DishCategory", "DishCategory")
                        .WithMany("Dishes")
                        .HasForeignKey("DishCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Dish__DishCatego__0D7A0286");

                    b.Navigation("DishCategory");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrder", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("DishOrders")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("fk_dishOrder_account");

                    b.HasOne("CoffeeCRM.Data.Model.DishOrderStatus", "DishOrderStatus")
                        .WithMany("DishOrders")
                        .HasForeignKey("DishOrderStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__DishOrder__DishO__0E6E26BF");

                    b.HasOne("CoffeeCRM.Data.Model.Table", "Table")
                        .WithMany("DishOrders")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("FK__DishOrder__Table__0F624AF8");

                    b.Navigation("Account");

                    b.Navigation("DishOrderStatus");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrderDetail", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Dish", "Dish")
                        .WithMany("DishOrderDetails")
                        .HasForeignKey("DishId")
                        .IsRequired()
                        .HasConstraintName("FK__DishOrder__DishI__10566F31");

                    b.HasOne("CoffeeCRM.Data.Model.DishOrder", "DishOrder")
                        .WithMany("DishOrderDetails")
                        .HasForeignKey("DishOrderId")
                        .IsRequired()
                        .HasConstraintName("FK__DishOrder__DishO__114A936A");

                    b.Navigation("Dish");

                    b.Navigation("DishOrder");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Ingredient", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.IngredientCategory", "IngredientCategory")
                        .WithMany("Ingredients")
                        .HasForeignKey("IngredientCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Ingre__123EB7A3");

                    b.HasOne("CoffeeCRM.Data.Model.Supplier", "Supplier")
                        .WithMany("Ingredients")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__Suppl__1332DBDC");

                    b.HasOne("CoffeeCRM.Data.Model.Unit", "Unit")
                        .WithMany("Ingredients")
                        .HasForeignKey("UnitId")
                        .IsRequired()
                        .HasConstraintName("FK__Ingredien__UnitI__14270015");

                    b.Navigation("IngredientCategory");

                    b.Navigation("Supplier");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.InventoryAudit", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Warehouse", "Warehouse")
                        .WithMany("InventoryAudits")
                        .HasForeignKey("WarehouseId")
                        .IsRequired()
                        .HasConstraintName("FK_InventoryAudit_Warehouse");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.InventoryDiscrepancy", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.InventoryAudit", "InventoryAudit")
                        .WithMany("InventoryDiscrepancies")
                        .HasForeignKey("InventoryAuditId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Inven__151B244E");

                    b.HasOne("CoffeeCRM.Data.Model.StockLevel", "StockLevel")
                        .WithMany("InventoryDiscrepancies")
                        .HasForeignKey("StockLevelId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Stock__160F4887");

                    b.Navigation("InventoryAudit");

                    b.Navigation("StockLevel");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Invoice", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("Invoices")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoice__Account__17036CC0");

                    b.HasOne("CoffeeCRM.Data.Model.Table", "Table")
                        .WithMany("Invoices")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("FK__Invoice__TableId__17F790F9");

                    b.Navigation("Account");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Notification", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_Account");

                    b.HasOne("CoffeeCRM.Data.Model.NotificationStatus", "NotificationStatus")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationStatusId")
                        .HasConstraintName("FK_Notification_NotificationStatus");

                    b.HasOne("CoffeeCRM.Data.Model.Role", "Sender")
                        .WithMany("Notifications")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK_Notification_SenderRole");

                    b.Navigation("Account");

                    b.Navigation("NotificationStatus");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.PurchaseOrder", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Accou__1BC821DD");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.PurchaseOrderDetail", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Ingredient", "Ingredient")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Ingre__1CBC4616");

                    b.HasOne("CoffeeCRM.Data.Model.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .IsRequired()
                        .HasConstraintName("FK__PurchaseO__Purch__1DB06A4F");

                    b.Navigation("Ingredient");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockLevel", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Ingredient", "Ingredient")
                        .WithMany("StockLevels")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__StockLeve__Ingre__1EA48E88");

                    b.HasOne("CoffeeCRM.Data.Model.Warehouse", "Warehouse")
                        .WithMany("StockLevels")
                        .HasForeignKey("WarehouseId")
                        .IsRequired()
                        .HasConstraintName("FK__StockLeve__Wareh__1F98B2C1");

                    b.Navigation("Ingredient");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockTransaction", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("StockTransactions")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__StockTran__Accou__208CD6FA");

                    b.HasOne("CoffeeCRM.Data.Model.Warehouse", "Warehouse")
                        .WithMany("StockTransactions")
                        .HasForeignKey("WarehouseId")
                        .IsRequired()
                        .HasConstraintName("FK__StockTran__Wareh__2180FB33");

                    b.Navigation("Account");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockTransactionDetail", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.StockLevel", "StockLevel")
                        .WithMany("StockTransactionDetails")
                        .HasForeignKey("StockLevelId")
                        .IsRequired()
                        .HasConstraintName("FK__StockTran__Stock__22751F6C");

                    b.HasOne("CoffeeCRM.Data.Model.StockTransaction", "StockTransaction")
                        .WithMany("StockTransactionDetails")
                        .HasForeignKey("StockTransactionId")
                        .IsRequired()
                        .HasConstraintName("FK__StockTran__Stock__236943A5");

                    b.Navigation("StockLevel");

                    b.Navigation("StockTransaction");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.TableBooking", b =>
                {
                    b.HasOne("CoffeeCRM.Data.Model.Account", "Account")
                        .WithMany("TableBookings")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__TableBook__Accou__245D67DE");

                    b.HasOne("CoffeeCRM.Data.Model.Table", "Table")
                        .WithMany("TableBookings")
                        .HasForeignKey("TableId")
                        .IsRequired()
                        .HasConstraintName("FK__TableBook__Table__25518C17");

                    b.Navigation("Account");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Account", b =>
                {
                    b.Navigation("AccountActivities");

                    b.Navigation("Attendances");

                    b.Navigation("CashFlows");

                    b.Navigation("DishOrders");

                    b.Navigation("Invoices");

                    b.Navigation("Notifications");

                    b.Navigation("PurchaseOrders");

                    b.Navigation("StockTransactions");

                    b.Navigation("TableBookings");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Dish", b =>
                {
                    b.Navigation("DishOrderDetails");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishCategory", b =>
                {
                    b.Navigation("Dishes");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrder", b =>
                {
                    b.Navigation("DishOrderDetails");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.DishOrderStatus", b =>
                {
                    b.Navigation("DishOrders");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Ingredient", b =>
                {
                    b.Navigation("PurchaseOrderDetails");

                    b.Navigation("StockLevels");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.IngredientCategory", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.InventoryAudit", b =>
                {
                    b.Navigation("InventoryDiscrepancies");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.NotificationStatus", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.PurchaseOrder", b =>
                {
                    b.Navigation("PurchaseOrderDetails");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Role", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockLevel", b =>
                {
                    b.Navigation("InventoryDiscrepancies");

                    b.Navigation("StockTransactionDetails");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.StockTransaction", b =>
                {
                    b.Navigation("StockTransactionDetails");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Supplier", b =>
                {
                    b.Navigation("Debts");

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Table", b =>
                {
                    b.Navigation("DishOrders");

                    b.Navigation("Invoices");

                    b.Navigation("TableBookings");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Unit", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("CoffeeCRM.Data.Model.Warehouse", b =>
                {
                    b.Navigation("InventoryAudits");

                    b.Navigation("StockLevels");

                    b.Navigation("StockTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
