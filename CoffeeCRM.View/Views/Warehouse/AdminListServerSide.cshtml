@{
    Layout = "_Admin_Layout";
}
@{
    ViewData["ViewName"] = "Nhà kho";
}

<!-- Chart.js -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.css">
<style>
    #tableWarehouseData th:nth-child(1),
    #tableWarehouseData td:nth-child(1) {
        width: 5%; /* STT */
    }

    #tableWarehouseData th:nth-child(2),
    #tableWarehouseData td:nth-child(2) {
        width: 10%; /* Mã kho */
    }

    #tableWarehouseData th:nth-child(3),
    #tableWarehouseData td:nth-child(3) {
        width: 10%; /* Tên kho */
    }

    #tableWarehouseData th:nth-child(4),
    #tableWarehouseData td:nth-child(4) {
        width: 25%; /* Vị trí */
    }

    #tableWarehouseData th:nth-child(5),
    #tableWarehouseData td:nth-child(5) {
        width: 20%; /* Ghi chú */
    }

    #tableWarehouseData th:nth-child(6),
    #tableWarehouseData td:nth-child(6) {
        width: 15%; /* Ngày tạo */
    }

    #tableWarehouseData th:nth-child(7),
    #tableWarehouseData td:nth-child(7) {
        width: 10%; /* Thao tác */
        text-align: center;
    }

    .badge {
        color: #fff;
        padding: 0.5em 0.8em;
        font-weight: 500;
        border-radius: 0.375rem;
    }

    .table-content {
        padding: 15px;
        background: var(--bs-app-header-base-bg-color);
        border-radius: 8px;
    }

    table thead tr th {
        white-space: nowrap;
    }
    :root {
        --primary: #6c5ce7;
        --primary-light: #a29bfe;
        --primary-dark: #5a49d8;
        --secondary: #fd79a8;
        --success: #00b894;
        --warning: #fdcb6e;
        --danger: #ff7675;
        --light: #f8f9fa;
        --dark: #2d3436;
        --gray-100: #f8f9fa;
        --gray-200: #e9ecef;
        --gray-300: #dee2e6;
        --gray-400: #ced4da;
        --gray-500: #adb5bd;
    }


    /* Gradient Backgrounds */
    .gradient-primary {
        background: linear-gradient(135deg, var(--primary), var(--primary-dark));
        color: white;
    }

    .gradient-secondary {
        background: linear-gradient(135deg, var(--primary-light), var(--secondary));
        color: white;
    }

    .gradient-success {
        background: linear-gradient(135deg, #00b894, #00cec9);
        color: white;
    }

    .gradient-warning {
        background: linear-gradient(135deg, #fdcb6e, #ffeaa7);
        color: #333;
    }

    .gradient-danger {
        background: linear-gradient(135deg, #ff7675, #fab1a0);
        color: white;
    }

    .gradient-sidebar {
        background: linear-gradient(180deg, #4834d4, #686de0);
        color: white;
    }

    /* Cards */
    .card {
        border-radius: 10px;
        border: none;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.3s;
        margin-bottom: 20px;
        overflow: hidden;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    .card-header {
        background-color: white;
        border-bottom: 1px solid var(--gray-200);
        padding: 15px 20px !important;
    }

        .card-header h5 {
            margin: 0;
            font-weight: 600;
        }

    .card-body {
        padding: 20px !important;
    }

    .card-body label {
        font-weight: 600;
        font-size: 14px;
    }

    #warehouseDetailPage .card-body p {
        padding-left: 0.2rem;
    }

    .card-footer {
        background-color: white;
        border-top: 1px solid var(--gray-200);
        padding: 15px 20px;
    }

    /* Stats Cards */
    .stats-card {
        background: white;
        border-radius: 10px;
        padding: 20px;
        display: flex;
        align-items: center;
        margin-bottom: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.3s;
    }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    .stats-card-icon {
        width: 60px;
        height: 60px;
        border-radius: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 1.5rem;
    }

    .stats-card-info {
        flex: 1;
    }

    .stats-card-value {
        font-size: 1.5rem;
        font-weight: 700;
        margin: 0;
        line-height: 1.2;
    }

    .stats-card-label {
        color: var(--gray-500);
        font-size: 0.9rem;
        margin: 0;
    }

    .stats-card-change {
        display: flex;
        align-items: center;
        font-size: 0.8rem;
        margin-top: 5px;
    }

        .stats-card-change.positive {
            color: var(--success);
        }

        .stats-card-change.negative {
            color: var(--danger);
        }

    /* Charts */
    .chart-container {
        position: relative;
        height: 300px;
        margin-bottom: 20px;
    }

    /* Tables */
    .table-container {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 20px;
    }

    .table-responsive {
        overflow-x: auto;
    }

    .table {
        margin-bottom: 0;
    }

        .table th {
            font-weight: 600;
            border-top: none;
            background-color: var(--gray-100);
        }

        .table td, .table th {
            padding: 12px 15px;
            vertical-align: middle;
        }

        .table tbody tr {
            transition: all 0.2s;
        }

            .table tbody tr:hover {
                background-color: rgba(108, 92, 231, 0.05);
            }

    /* Badges */
    .badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.75rem;
    }

    .badge-primary {
        background-color: var(--primary);
        color: white;
    }

    .badge-success {
        background-color: var(--success);
        color: white;
    }

    .badge-warning {
        background-color: var(--warning);
        color: #333;
    }

    .badge-danger {
        background-color: var(--danger);
        color: white;
    }

    .badge-secondary {
        background-color: var(--gray-300);
        color: var(--dark);
    }

    /* Status Indicators */
    .status-indicator {
        width: 10px;
        height: 10px;
        border-radius: 50%;
        display: inline-block;
        margin-right: 5px;
    }

    .status-active {
        background-color: var(--success);
    }

    .status-inactive {
        background-color: var(--danger);
    }

    .status-warning {
        background-color: var(--warning);
    }

    /* Buttons */
    .btn {
        border-radius: 5px;
        padding: 8px 15px;
        font-weight: 500;
        transition: all 0.3s;
    }

    .btn-primary {
        background-color: var(--primary) !important;
        border-color: var(--primary) !important;
    }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            border-color: var(--primary-dark);
        }

    .btn-success {
        background-color: var(--success);
        border-color: var(--success);
    }

        .btn-success:hover {
            background-color: #00a383;
            border-color: #00a383;
        }

    .btn-warning {
        background-color: var(--warning);
        border-color: var(--warning);
        color: #333;
    }

        .btn-warning:hover {
            background-color: #f0b94f;
            border-color: #f0b94f;
            color: #333;
        }

    .btn-danger {
        background-color: var(--danger);
        border-color: var(--danger);
    }

        .btn-danger:hover {
            background-color: #e55a5a;
            border-color: #e55a5a;
        }

    .btn-icon {
        width: 36px;
        height: 36px;
        padding: 0;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        border-radius: 5px;
    }

    /* Forms */
    .form-control {
        border-radius: 5px;
        padding: 10px 15px;
        border: 1px solid var(--gray-300);
    }

        .form-control:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 0.2rem rgba(108, 92, 231, 0.25);
        }

    .form-label {
        font-weight: 500;
        margin-bottom: 5px;
    }

    /* Tabs */
    .nav-tabs {
        border-bottom: 1px solid var(--gray-300);
        margin-bottom: 20px;
    }

        .nav-tabs .nav-link {
            border: none;
            color: var(--gray-500);
            padding: 10px 15px;
            font-weight: 500;
            border-radius: 0;
            margin-right: 10px;
        }

            .nav-tabs .nav-link:hover {
                color: var(--primary);
                border-bottom: 2px solid var(--primary-light);
            }

            .nav-tabs .nav-link.active {
                color: var(--primary);
                border-bottom: 2px solid var(--primary);
                background-color: transparent;
            }

    /* Modals */
    .modal-content {
        border-radius: 10px;
        border: none;
        box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        border-bottom: 1px solid var(--gray-200);
        padding: 15px 20px;
    }

    .modal-body {
        padding: 20px;
    }

    .modal-footer {
        border-top: 1px solid var(--gray-200);
        padding: 15px 20px;
    }

    /* Warehouse Grid */
    .warehouse-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    .warehouse-card {
        background: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        transition: all 0.3s;
    }

        .warehouse-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

    .warehouse-card-header {
        padding: 15px 20px;
        border-bottom: 1px solid var(--gray-200);
        background: linear-gradient(135deg, #663ffa, #8e74ff);
        font-size: 16px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .warehouse-card-title {
        margin: 0;
        font-weight: 600;
    }

    h5.warehouse-card-title {
        color: #fff;
    }

    .muted-color {
        color: rgba(33, 37, 41, 0.75);
    }

    .warehouse-card-body {
        padding: 15px 20px;
        font-size: 14px;
        min-height: 170px;
    }

    .warehouse-card-body i {
        font-size: 16px;
    }

    .warehouse-card-footer {
        padding: 15px 20px;
        border-top: 1px solid var(--gray-200);
        display: flex;
        justify-content: space-between;
    }

    .stock-level-detail {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
        border-left: 4px solid var(--primary);
        transition: all 0.3s;
    }

        .stock-level-detail:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
            transform: translateY(-2px);
        }

        .stock-level-detail.expired {
            border-left-color: var(--danger);
        }

        .stock-level-detail.warning {
            border-left-color: var(--warning);
        }

    .stock-level-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .stock-level-title {
        font-weight: 600;
        margin: 0;
    }

    .stock-level-info {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 10px;
    }

    .stock-level-info-item {
        margin-bottom: 5px;
    }

    .stock-level-info-label {
        font-size: 0.8rem;
        color: var(--gray-500);
        margin-bottom: 2px;
    }

    .stock-level-info-value {
        font-weight: 500;
    }

    .stock-level-actions {
        margin-top: 10px;
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }

    /* Ingredient Summary Card */
    .ingredient-summary {
        display: flex;
        align-items: center;
    }

    .ingredient-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        background-color: var(--primary-light);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        font-size: 1.2rem;
    }

    .ingredient-info {
        flex: 1;
    }

    .ingredient-name {
        font-weight: 600;
        margin: 0;
        line-height: 1.2;
    }

    .ingredient-meta {
        font-size: 0.8rem;
        color: var(--gray-500);
    }

    /* Adjustment Form */
    .adjustment-form {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        margin-top: 15px;
    }

    /* Expiration Badge */
    .expiration-badge {
        padding: 3px 8px;
        border-radius: 4px;
        font-size: 0.75rem;
        font-weight: 500;
    }

        .expiration-badge.expired {
            background-color: rgba(255, 118, 117, 0.1);
            color: var(--danger);
            border: 1px solid var(--danger);
        }

        .expiration-badge.warning {
            background-color: rgba(253, 203, 110, 0.1);
            color: #d68000;
            border: 1px solid var(--warning);
        }

        .expiration-badge.good {
            background-color: rgba(0, 184, 148, 0.1);
            color: var(--success);
            border: 1px solid var(--success);
        }

    /* Transaction History Styles */
    .transaction-history-container {
        position: relative;
        min-height: 200px;
    }

    .empty-state {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2rem;
    }

    .transaction-type {
        font-weight: 500;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        display: inline-block;
    }

        .transaction-type.purchase {
            background-color: rgba(25, 135, 84, 0.1);
            color: #198754;
        }

        .transaction-type.sale {
            background-color: rgba(13, 110, 253, 0.1);
            color: #0d6efd;
        }

        .transaction-type.adjustment-in {
            background-color: rgba(23, 162, 184, 0.1);
            color: #17a2b8;
        }

        .transaction-type.adjustment-out {
            background-color: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }

        .transaction-type.waste {
            background-color: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

    .transaction-quantity {
        font-weight: 500;
    }

        .transaction-quantity.positive {
            color: #198754;
        }

        .transaction-quantity.negative {
            color: #dc3545;
        }

    /* Timeline styles for transaction history */
    .transaction-timeline {
        position: relative;
        padding-left: 2rem;
        margin-bottom: 1.5rem;
    }

        .transaction-timeline::before {
            content: '';
            position: absolute;
            left: 0.5rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background-color: #e9ecef;
        }

    .transaction-timeline-item {
        position: relative;
        padding-bottom: 1.5rem;
    }

        .transaction-timeline-item:last-child {
            padding-bottom: 0;
        }

        .transaction-timeline-item::before {
            content: '';
            position: absolute;
            left: -1.5rem;
            top: 0.25rem;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: #fff;
            border: 2px solid #adb5bd;
        }

        .transaction-timeline-item.purchase::before {
            border-color: #198754;
        }

        .transaction-timeline-item.sale::before {
            border-color: #0d6efd;
        }

        .transaction-timeline-item.adjustment-in::before {
            border-color: #17a2b8;
        }

        .transaction-timeline-item.adjustment-out::before {
            border-color: #ffc107;
        }

        .transaction-timeline-item.waste::before {
            border-color: #dc3545;
        }

    /* Animations */
        @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .warehouse-card-info:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .animate-fade-in {
        animation: fadeIn 0.3s ease-out forwards;
    }

    .animate-fade-in-delay-1 {
        animation: fadeIn 0.3s ease-out 0.1s forwards;
        opacity: 0;
    }

    .animate-fade-in-delay-2 {
        animation: fadeIn 0.3s ease-out 0.2s forwards;
        opacity: 0;
    }

    .animate-fade-in-delay-3 {
        animation: fadeIn 0.3s ease-out 0.3s forwards;
        opacity: 0;
    }

    /* Loading Spinner */
    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 4px solid rgba(108, 92, 231, 0.1);
        border-radius: 50%;
        border-top: 4px solid var(--primary);
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        @@0% {
            transform: rotate(0deg);
        }

        @@100% {
            transform: rotate(360deg);
        }
    }

    /* Responsive */
        @@media (max-width: 992px) {
        .sidebar

    {
        transform: translateX(-250px);
    }

    .sidebar.show {
        transform: translateX(0);
    }

    .main-content {
        margin-left: 0;
    }

    .warehouse-grid {
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    }

    }

        @@media (max-width: 768px) {
        .header-search

    {
        display: none;
    }

    .warehouse-grid {
        grid-template-columns: 1fr;
    }

    .stats-card {
        margin-bottom: 15px;
    }

    }

        @@media (max-width: 576px) {
        .header-title h1

    {
        font-size: 1.2rem;
    }

    .stats-card-icon {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
    }

    .stats-card-value {
        font-size: 1.2rem;
    }

        .badge-draft {
            background-color: var(--gray-300);
            color: var(--dark);
        }

        .badge-pending {
            background-color: var(--warning);
            color: #333;
        }

        .badge-completed {
            background-color: var(--success);
            color: white;
        }

        .badge-canceled {
            background-color: var(--danger);
            color: white;
        }

        .badge-import {
            background-color: var(--primary);
            color: white;
        }

        .badge-export {
            background-color: var(--danger);
            color: white;
        }

        .badge-inventory {
            background-color: var(--warning);
            color: #333;
        }

        .timeline {
            position: relative;
            padding-left: 30px;
        }

            .timeline::before {
                content: '';
                position: absolute;
                left: 10px;
                top: 0;
                bottom: 0;
                width: 2px;
                background-color: var(--gray-300);
            }

        .timeline-item {
            position: relative;
            margin-bottom: 20px;
        }

            .timeline-item:last-child {
                margin-bottom: 0;
            }

        .timeline-marker {
            position: absolute;
            left: -30px;
            top: 0;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background-color: var(--primary);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.75rem;
        }

            .timeline-marker.draft {
                background-color: var(--gray-400);
            }

            .timeline-marker.pending {
                background-color: var(--warning);
            }

            .timeline-marker.completed {
                background-color: var(--success);
            }

            .timeline-marker.canceled {
                background-color: var(--danger);
            }

        .timeline-content {
            padding: 15px;
            background-color: var(--light);
            border-radius: 8px;
        }

        .timeline-date {
            font-size: 0.8rem;
            color: var(--gray-500);
            margin-bottom: 5px;
        }

        .timeline-title {
            font-weight: 600;
            margin-bottom: 5px;
        }

        .timeline-text {
            font-size: 0.9rem;
            color: var(--gray-700);
        }

        .form-select.status-draft {
            border-color: var(--gray-400);
        }

        .form-select.status-pending {
            border-color: var(--warning);
        }

        .form-select.status-completed {
            border-color: var(--success);
        }

        .form-select.status-canceled {
            border-color: var(--danger);
        }

        .nav-pills .nav-link.active {
            background-color: var(--primary);
        }

        .nav-pills .nav-link {
            color: var(--dark);
        }

            .nav-pills .nav-link.active {
                color: white;
            }

        .detail-row {
            margin-bottom: 10px;
            display: flex;
        }

        .detail-label {
            font-weight: 500;
            min-width: 150px;
        }

        .detail-value {
            flex: 1;
        }

        .detail-badge {
            font-size: 0.8rem;
            padding: 2px 8px;
            border-radius: 4px;
        }

        .detail-badge-success {
            background-color: rgba(0, 184, 148, 0.1);
            color: var(--success);
            border: 1px solid var(--success);
        }

        .detail-badge-warning {
            background-color: rgba(253, 203, 110, 0.1);
            color: #d68000;
            border: 1px solid var(--warning);
        }

        .detail-badge-danger {
            background-color: rgba(255, 118, 117, 0.1);
            color: var(--danger);
            border: 1px solid var(--danger);
        }
        /* Custom styles for select2 */
        .select2-container--bootstrap-5 .select2-selection {
            border: 1px solid #ced4da;
            border-radius: .25rem;
        }

        .select2-container--bootstrap-5.select2-container--focus .select2-selection,
        .select2-container--bootstrap-5.select2-container--open .select2-selection {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }

        .select2-container--bootstrap-5 .select2-dropdown {
            border-color: #86b7fe;
            border-radius: .25rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        .select2-container--bootstrap-5 .select2-selection--single .select2-selection__rendered {
            padding: .375rem .75rem;
            color: #212529;
        }

        .select2-container--bootstrap-5 .select2-selection--single {
            height: calc(1.5em + .75rem + 2px);
        }

        .modal-body.scrollable {
            max-height: 70vh;
            overflow-y: auto;
        }

        .spinner-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }

        .spinner-container {
            background-color: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

            .spinner-container p {
                margin-top: 10px;
                font-weight: 500;
            }

    }
</style>

<div id="kt_app_content" class="app-content  flex-column-fluid ">
    <!--begin::Content container-->
    <div id="kt_app_content_container" class="app-container  container-fluid ">
        <!--begin::Row-->
        <div class="table-content d-none">
            <!--begin::Col-->
            <!--begin::Wrapper-->
            <div class="d-flex flex-stack mb-5">
                <!--begin::Search-->
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input" placeholder="Tìm kiếm" />
                </div>
                <!--end::Search-->
                <!--begin::Toolbar-->
                <div class="d-flex justify-content-end" data-kt-docs-table-toolbar="base">
                    <!--begin::Filter-->
                    <button type="button" class="btn btn-light-primary me-3" data-bs-toggle="tooltip" title="Coming Soon">
                        <i class="ki-duotone ki-filter fs-2"><span class="path1"></span><span class="path2"></span></i>
                        Bộ lọc
                    </button>
                    <!--end::Filter-->
                    <!--begin::Add customer-->
                    <button type="button" class="btn btn-primary" data-bs-toggle="tooltip" title="Tạo mới" onclick="editItem(0)">
                        <i class="ki-duotone ki-plus fs-2"></i>
                        Tạo mới
                    </button>
                    <!--end::Add customer-->
                </div>
                <!--end::Toolbar-->
                <!--begin::Group actions-->
                <div class="d-flex justify-content-end align-items-center d-none" data-kt-docs-table-toolbar="selected">
                    <div class="fw-bold me-5">
                        <span class="me-2" data-kt-docs-table-select="selected_count"></span> Selected
                    </div>

                    <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" title="Coming Soon">
                        Selection Action
                    </button>
                </div>
                <!--end::Group actions-->
            </div>
            <!--end::Wrapper-->
            <!--begin::Datatable-->
            <table id="tableData" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
                <thead>
                    <tr class="fw-bold fs-6 text-gray-800">
                        <th>STT</th>
                        <th>Tên kho</th>
                        <th>Mã kho</th>
                        <th>Địa chỉ</th>
                        <th>Chú thích</th>
                        <th>Ngày tạo</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <thead>
                    <tr class="fs-6">
                        <th></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        <th><input type="text" class="form-control tableheaderFillter" /></th>
                        
                        <th>
                            <div class="input-group" id="filterCreatedTime" data-td-target-input="nearest" data-td-target-toggle="nearest">
                                <input id="filterCreatedTime_input" readonly type="text" class="form-control tableheaderFillter" data-td-target="#filterCreatedTime" />
                                <span class="input-group-text" title="Chọn" id="open-flatpickr" data-td-target="#filterCreatedTime">
                                    <i class="ki-duotone ki-calendar fs-2"><span class="path1"></span><span class="path2"></span></i>
                                </span>
                                <span class="input-group-text" id="clear-flatpickr" title="Xóa" data-clear="true" data-target="filterCreatedTime">
                                    <i class="ki-duotone ki-calendar-remove fs-2"><i class="path1"></i><i class="path2"></i><i class="path3"></i><i class="path4"></i><i class="path5"></i><i class="path6"></i></i>
                                </span>
                            </div>
                        </th>

                        <th class="text-center">
                            <div class="search-control">
                                <button class="btn btn-primary form-control mb-1" title="Tìm kiếm" id="btnTableSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_search_2 m-0">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor"></path>
                                            <path opacity="0.3" d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z" fill="currentColor"></path>
                                        </svg>
                                    </span>
                                </button>
                                <button class="btn btn-secondary form-control" title="Reset" id="btnTableResetSearch">
                                    <span class="svg-icon svg-icon svg-icon-1 svg_cancel m-0">
                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <rect x="9.39844" y="20.7144" width="16" height="2.66667" rx="1.33333" transform="rotate(-45 9.39844 20.7144)" fill="currentColor"></rect>
                                            <rect x="11.2852" y="9.40039" width="16" height="2.66667" rx="1.33333" transform="rotate(45 11.2852 9.40039)" fill="currentColor"></rect>
                                        </svg>
                                    </span>
                                </button>
                            </div>
                        </th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
                <tfoot>
                    <tr class="border-top fw-bold fs-6 text-gray-800">
                    </tr>
                </tfoot>
            </table>
            <!--end::Datatable-->
            
            <!--end::Col-->
        </div>
    
        <div class="page-content d-none" id="dashboardPage">
            <!-- Stats Cards -->
            <div class="row">
                <div class="col-md-6 col-lg-3 animate-fade-in">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-primary">
                            <i class="fas fa-box"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value">24,500,000 ₫</h3>
                            <p class="stats-card-label">Tổng giá trị tồn kho</p>
                            <div class="stats-card-change">
                                <span>48 nguyên liệu trong 3 kho</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3 animate-fade-in-delay-1">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-success">
                            <i class="fas fa-arrow-up"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value">8,500,000 ₫</h3>
                            <p class="stats-card-label">Nhập kho hôm nay</p>
                            <div class="stats-card-change positive">
                                <i class="fas fa-arrow-up me-1"></i>
                                <span>12.5% so với hôm qua</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3 animate-fade-in-delay-2">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-danger">
                            <i class="fas fa-arrow-down"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value">6,200,000 ₫</h3>
                            <p class="stats-card-label">Xuất kho hôm nay</p>
                            <div class="stats-card-change negative">
                                <i class="fas fa-arrow-down me-1"></i>
                                <span>8.3% so với hôm qua</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6 col-lg-3 animate-fade-in-delay-3">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-warning">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value">8</h3>
                            <p class="stats-card-label">Cảnh báo</p>
                            <div class="stats-card-change">
                                <span>5 sắp hết, 3 sắp hết hạn</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts -->
            <div class="row mt-4">
                <div class="col-lg-8 animate-fade-in">
                    <div class="card">
                        <div class="card-header">
                            <h5>Biểu đồ tồn kho</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="stockLevelChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 animate-fade-in-delay-1">
                    <div class="card">
                        <div class="card-header">
                            <h5>Công suất kho</h5>
                        </div>
                        <div class="card-body">
                            <div class="mb-4">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Kho chính</span>
                                    <span>85%</span>
                                </div>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-primary" role="progressbar" style="width: 85%;" aria-valuenow="85" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>

                            <div class="mb-4">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Kho phụ 1</span>
                                    <span>62%</span>
                                </div>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-success" role="progressbar" style="width: 62%;" aria-valuenow="62" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>

                            <div class="mb-4">
                                <div class="d-flex justify-content-between mb-1">
                                    <span>Kho phụ 2</span>
                                    <span>47%</span>
                                </div>
                                <div class="progress" style="height: 8px;">
                                    <div class="progress-bar bg-info" role="progressbar" style="width: 47%;" aria-valuenow="47" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                            </div>

                            <div class="mt-4">
                                <div class="d-flex justify-content-between">
                                    <span class="fw-bold">Tổng công suất</span>
                                    <span class="fw-bold">72%</span>
                                </div>
                                <div class="d-flex mt-2 muted-color  ">
                                    <div class="me-3">
                                        <span class="status-indicator status-active"></span>
                                        <span>Tốt</span>
                                    </div>
                                    <div class="me-3">
                                        <span class="status-indicator status-warning"></span>
                                        <span>Cảnh báo</span>
                                    </div>
                                    <div>
                                        <span class="status-indicator status-inactive"></span>
                                        <span>Đầy</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-lg-5 animate-fade-in">
                    <div class="card">
                        <div class="card-header">
                            <h5>Nhập xuất kho</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="transactionChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-7 animate-fade-in-delay-1">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5>Cảnh báo tồn kho</h5>
                            <ul class="nav nav-tabs card-header-tabs">
                                <li class="nav-item">
                                    <a class="nav-link active" id="lowStockTab" data-bs-toggle="tab" href="#lowStock">Sắp hết</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="expiringTab" data-bs-toggle="tab" href="#expiring">Sắp hết hạn</a>
                                </li>
                            </ul>
                        </div>
                        <div class="card-body p-0">
                            <div class="tab-content">
                                <div class="tab-pane fade show active" id="lowStock">
                                    <div class="list-group list-group-flush">
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-medium">Sữa tươi</span>
                                                    <span class="badge bg-warning text-dark ms-2">Sắp hết</span>
                                                </div>
                                                <div class="muted-color   mt-1">
                                                    ING-003 | Kho chính | Còn lại: <span class="text-warning fw-medium">2</span> Lít (Tối thiểu: 5)
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-success">
                                                <i class="fas fa-plus me-1"></i> Nhập hàng
                                            </button>
                                        </div>
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-medium">Siro vani</span>
                                                    <span class="badge bg-danger ms-2">Hết hàng</span>
                                                </div>
                                                <div class="muted-color   mt-1">
                                                    ING-005 | Kho chính | Còn lại: <span class="text-danger fw-medium">0</span> Chai (Tối thiểu: 3)
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-success">
                                                <i class="fas fa-plus me-1"></i> Nhập hàng
                                            </button>
                                        </div>
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-medium">Đường nâu</span>
                                                    <span class="badge bg-warning text-dark ms-2">Sắp hết</span>
                                                </div>
                                                <div class="muted-color   mt-1">
                                                    ING-008 | Kho phụ 1 | Còn lại: <span class="text-warning fw-medium">1</span> Kg (Tối thiểu: 3)
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-success">
                                                <i class="fas fa-plus me-1"></i> Nhập hàng
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade" id="expiring">
                                    <div class="list-group list-group-flush">
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-medium">Siro vani</span>
                                                    <span class="badge bg-danger ms-2">Đã hết hạn</span>
                                                </div>
                                                <div class="muted-color   mt-1">
                                                    ING-005 | Kho chính | Số lượng: 2 Chai | HSD: 10/04/2023
                                                    <span class="text-danger fw-medium"> (Quá hạn 17 ngày)</span>
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-danger">
                                                <i class="fas fa-trash-alt me-1"></i> Xử lý
                                            </button>
                                        </div>
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-medium">Sữa tươi</span>
                                                    <span class="badge bg-warning text-dark ms-2">Sắp hết hạn</span>
                                                </div>
                                                <div class="muted-color   mt-1">
                                                    ING-007 | Kho phụ 1 | Số lượng: 3 Lít | HSD: 15/05/2023
                                                    <span class="text-warning fw-medium"> (Còn 18 ngày)</span>
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-danger">
                                                <i class="fas fa-trash-alt me-1"></i> Xử lý
                                            </button>
                                        </div>
                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                            <div>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-medium">Kem tươi</span>
                                                    <span class="badge bg-warning text-dark ms-2">Sắp hết hạn</span>
                                                </div>
                                                <div class="muted-color   mt-1">
                                                    ING-010 | Kho chính | Số lượng: 2 Hộp | HSD: 20/05/2023
                                                    <span class="text-warning fw-medium"> (Còn 23 ngày)</span>
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-danger">
                                                <i class="fas fa-trash-alt me-1"></i> Xử lý
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer text-center">
                            <a href="#" class="btn btn-sm btn-link">Xem tất cả <i class="fas fa-arrow-right ms-1"></i></a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-4 animate-fade-in">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5>Giao dịch gần đây</h5>
                    <div>
                        <button class="btn btn-sm btn-outline-secondary me-2">
                            <i class="fas fa-sync-alt me-1"></i> Làm mới
                        </button>
                        <button class="btn btn-sm btn-outline-secondary">
                            <i class="fas fa-calendar-alt me-1"></i> Lọc theo ngày
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Mã giao dịch</th>
                                    <th>Loại</th>
                                    <th>Kho</th>
                                    <th>Thời gian</th>
                                    <th>Giá trị</th>
                                    <th>Trạng thái</th>
                                    <th>Người tạo</th>
                                    <th class="text-end">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>TX-IN-20230407-001</td>
                                    <td><span class="badge bg-success">Nhập kho</span></td>
                                    <td>Kho chính</td>
                                    <td>07/04/2023 09:15</td>
                                    <td>3,500,000 ₫</td>
                                    <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                    <td>Admin</td>
                                    <td class="text-end">
                                        <button class="btn btn-sm btn-icon btn-light">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>TX-OUT-20230407-001</td>
                                    <td><span class="badge bg-danger">Xuất kho</span></td>
                                    <td>Kho chính</td>
                                    <td>07/04/2023 10:30</td>
                                    <td>1,200,000 ₫</td>
                                    <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                    <td>Admin</td>
                                    <td class="text-end">
                                        <button class="btn btn-sm btn-icon btn-light">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>TX-IN-20230407-002</td>
                                    <td><span class="badge bg-success">Nhập kho</span></td>
                                    <td>Kho phụ 1</td>
                                    <td>07/04/2023 11:45</td>
                                    <td>2,800,000 ₫</td>
                                    <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                    <td>Admin</td>
                                    <td class="text-end">
                                        <button class="btn btn-sm btn-icon btn-light">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>TX-OUT-20230407-002</td>
                                    <td><span class="badge bg-danger">Xuất kho</span></td>
                                    <td>Kho phụ 1</td>
                                    <td>07/04/2023 13:20</td>
                                    <td>950,000 ₫</td>
                                    <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                    <td>Admin</td>
                                    <td class="text-end">
                                        <button class="btn btn-sm btn-icon btn-light">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                                <tr>
                                    <td>TX-ADJUST-20230407-001</td>
                                    <td><span class="badge bg-warning text-dark">Điều chỉnh</span></td>
                                    <td>Kho chính</td>
                                    <td>07/04/2023 14:10</td>
                                    <td>350,000 ₫</td>
                                    <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                    <td>Admin</td>
                                    <td class="text-end">
                                        <button class="btn btn-sm btn-icon btn-light">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer text-center">
                    <a href="#" class="btn btn-sm btn-link">Xem tất cả giao dịch <i class="fas fa-arrow-right ms-1"></i></a>
                </div>
            </div>
        </div>

        

        <!-- Warehouses Page -->
        <div class="page-content" id="warehousesPage">

            <div class="spinner-overlay d-none" id="loadingSpinner">
                <div class="spinner-container">
                    <div class="spinner-border text-primary" role="status"></div>
                    <p>Đang xử lý...</p>
                </div>
            </div>
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex align-items-center position-relative my-1">
                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15 bg-white round" id="search-input-warehouse" placeholder="Tìm kiếm">
                </div>

                <div class="d-flex align-items-center">
                    <div class="btn-group me-2">
                        <button class="btn btn-light active" id="gridViewBtn">
                            <i class="fas fa-th"></i>
                        </button>
                        <button class="btn btn-light" id="listViewBtn">
                            <i class="fas fa-list"></i>
                        </button>
                    </div>

                    <button class="btn btn-primary" onclick="editWarehouse(0)">
                        <i class="fas fa-plus me-1"></i> Thêm kho mới
                    </button>
                </div>
            </div>

            <!-- Grid View -->
            <div class="warehouse-grid" id="warehouseGridView">
                <!-- Warehouse Card 1 -->
                <div class="warehouse-card animate-fade-in">
                    <div class="warehouse-card-header">
                        <span class="badge bg-primary">Đang hoạt động</span>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-icon btn-light" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="#" data-warehouse-id="1"><i class="fas fa-eye me-2"></i> Xem chi tiết</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-edit me-2"></i> Chỉnh sửa</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-trash-alt me-2"></i> Xóa</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="warehouse-card-body">
                        <h5 class="warehouse-card-title mb-2">Kho chính</h5>
                        <p class="muted-color   mb-2">Mã kho: WH-001</p>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-map-marker-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Tầng 1, 123 Nguyễn Văn Linh, Quận 7, TP.HCM</span>
                        </div>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-calendar-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Ngày tạo: 15/01/2023 08:30</span>
                        </div>

                        <div class="d-flex align-items-start">
                            <i class="fas fa-sticky-note mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Kho chứa nguyên liệu chính</span>
                        </div>
                    </div>
                    <div class="warehouse-card-footer">
                        <button class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-edit me-1"></i> Chỉnh sửa
                        </button>
                        <button class="btn btn-sm btn-primary" data-warehouse-id="1">
                            <i class="fas fa-eye me-1"></i> Xem chi tiết
                        </button>
                    </div>
                </div>

                <!-- Warehouse Card 2 -->
                <div class="warehouse-card animate-fade-in-delay-1">
                    <div class="warehouse-card-header">
                        <span class="badge bg-primary">Đang hoạt động</span>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-icon btn-light" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="#" data-warehouse-id="2"><i class="fas fa-eye me-2"></i> Xem chi tiết</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-edit me-2"></i> Chỉnh sửa</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-trash-alt me-2"></i> Xóa</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="warehouse-card-body">
                        <h5 class="warehouse-card-title mb-2">Kho phụ 1</h5>
                        <p class="muted-color   mb-2">Mã kho: WH-002</p>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-map-marker-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Tầng 2, 123 Nguyễn Văn Linh, Quận 7, TP.HCM</span>
                        </div>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-calendar-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Ngày tạo: 20/02/2023 10:15</span>
                        </div>

                        <div class="d-flex align-items-start">
                            <i class="fas fa-sticky-note mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Kho chứa đồ dùng và vật tư</span>
                        </div>
                    </div>
                    <div class="warehouse-card-footer">
                        <button class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-edit me-1"></i> Chỉnh sửa
                        </button>
                        <button class="btn btn-sm btn-primary" data-warehouse-id="2">
                            <i class="fas fa-eye me-1"></i> Xem chi tiết
                        </button>
                    </div>
                </div>

                <!-- Warehouse Card 3 -->
                <div class="warehouse-card animate-fade-in-delay-2">
                    <div class="warehouse-card-header">
                        <span class="badge bg-primary">Đang hoạt động</span>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-icon btn-light" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="#" data-warehouse-id="3"><i class="fas fa-eye me-2"></i> Xem chi tiết</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-edit me-2"></i> Chỉnh sửa</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-trash-alt me-2"></i> Xóa</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="warehouse-card-body">
                        <h5 class="warehouse-card-title mb-2">Kho phụ 2</h5>
                        <p class="muted-color   mb-2">Mã kho: WH-003</p>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-map-marker-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">456 Lê Văn Lương, Quận 7, TP.HCM</span>
                        </div>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-calendar-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Ngày tạo: 10/03/2023 14:45</span>
                        </div>

                        <div class="d-flex align-items-start">
                            <i class="fas fa-sticky-note mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Kho chứa nguyên liệu phụ</span>
                        </div>
                    </div>
                    <div class="warehouse-card-footer">
                        <button class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-edit me-1"></i> Chỉnh sửa
                        </button>
                        <button class="btn btn-sm btn-primary" data-warehouse-id="3">
                            <i class="fas fa-eye me-1"></i> Xem chi tiết
                        </button>
                    </div>
                </div>

                <!-- Warehouse Card 4 -->
                <div class="warehouse-card animate-fade-in-delay-3">
                    <div class="warehouse-card-header">
                        <span class="badge bg-secondary">Ngừng hoạt động</span>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-icon btn-light" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="#" data-warehouse-id="4"><i class="fas fa-eye me-2"></i> Xem chi tiết</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-edit me-2"></i> Chỉnh sửa</a></li>
                                <li><a class="dropdown-item" href="#"><i class="fas fa-trash-alt me-2"></i> Xóa</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="warehouse-card-body">
                        <h5 class="warehouse-card-title mb-2">Kho dự phòng</h5>
                        <p class="muted-color   mb-2">Mã kho: WH-004</p>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-map-marker-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">789 Nguyễn Thị Thập, Quận 7, TP.HCM</span>
                        </div>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-calendar-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Ngày tạo: 05/04/2023 09:20</span>
                        </div>

                        <div class="d-flex align-items-start">
                            <i class="fas fa-sticky-note mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Kho dự phòng cho mùa cao điểm</span>
                        </div>
                    </div>
                    <div class="warehouse-card-footer">
                        <button class="btn btn-sm btn-outline-primary">
                            <i class="fas fa-edit me-1"></i> Chỉnh sửa
                        </button>
                        <button class="btn btn-sm btn-primary" data-warehouse-id="4">
                            <i class="fas fa-eye me-1"></i> Xem chi tiết
                        </button>
                    </div>
                </div>
            </div>
            <!-- Thêm phần tử này sau div id="ingredientsGrid" -->
            <div class="row mt-3" id="gridPagination">
                <div class="col-12">
                    <nav aria-label="Phân trang">
                        <ul class="pagination justify-content-center" id="gridPaginationControls">
                            <!-- Các nút phân trang sẽ được tạo bằng JavaScript -->
                        </ul>
                    </nav>
                </div>
            </div>
            <!-- List View -->
            <div class="table-container d-none" id="warehouseListView">
                <div class="table-responsive">
                    <table id="tableWarehouseData" class="table table-hover table-rounded table-row-bordered gy-3 gs-3">
                        <thead >
                            <tr class="fw-bold fs-6 text-gray-800">
                                <th>STT</th>
                                <th>Mã kho</th>
                                <th>Tên kho</th>
                                <th>Vị trí</th>
                                <th>Ghi chú</th>
                                <th>Ngày tạo</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>WH-001</td>
                                <td>Kho chính</td>
                                <td>Tầng 1, 123 Nguyễn Văn Linh, Quận 7, TP.HCM</td>
                                <td>15/01/2023 08:30</td>
                                <td><span class="badge bg-primary">Đang hoạt động</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-icon btn-light me-1" data-warehouse-id="1">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light me-1">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>WH-002</td>
                                <td>Kho phụ 1</td>
                                <td>Tầng 2, 123 Nguyễn Văn Linh, Quận 7, TP.HCM</td>
                                <td>20/02/2023 10:15</td>
                                <td><span class="badge bg-primary">Đang hoạt động</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-icon btn-light me-1" data-warehouse-id="2">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light me-1">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>WH-003</td>
                                <td>Kho phụ 2</td>
                                <td>456 Lê Văn Lương, Quận 7, TP.HCM</td>
                                <td>10/03/2023 14:45</td>
                                <td><span class="badge bg-primary">Đang hoạt động</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-icon btn-light me-1" data-warehouse-id="3">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light me-1">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td>WH-004</td>
                                <td>Kho dự phòng</td>
                                <td>789 Nguyễn Thị Thập, Quận 7, TP.HCM</td>
                                <td>05/04/2023 09:20</td>
                                <td><span class="badge bg-secondary">Ngừng hoạt động</span></td>
                                <td class="text-end">
                                    <button class="btn btn-sm btn-icon btn-light me-1" data-warehouse-id="4">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light me-1">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-icon btn-light">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Warehouse Detail Page -->
        <div class="page-content d-none" id="warehouseDetailPage">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div class="d-flex align-items-center gap-3">
                    <button class="btn-outline-primary btn btn-icon pe-23" id="backToWarehouses">
                        <i class="fas fa-arrow-left fs-4"></i>
                    </button>
                    <h4 class="mb-0" id="warehouseDetailTitle">Kho chính</h4>
                    <span class="badge bg-primary ms-2 text-white font-weight-bold p-3" style="font-size: 12px" id="warehouseDetailStatus">Đang hoạt động</span>
                </div>

                <div class="d-flex">
                    <button class="btn btn-outline-primary me-2" id="btnEditWarehouse">
                        <i class="fas fa-edit me-1"></i> Chỉnh sửa
                    </button>
                    <button class="btn btn-success me-2" data-bs-toggle="modal" data-bs-target="#stockInModal">
                        <i class="fas fa-plus me-1"></i> Nhập kho
                    </button>
                    <button class="btn btn-warning me-2" data-bs-toggle="modal" data-bs-target="#stockOutModal">
                        <i class="fas fa-minus me-1"></i> Xuất kho
                    </button>
                    <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#auditModal">
                        <i class="fas fa-clipboard-check me-1"></i> Kiểm kê
                    </button>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 animate-fade-in">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-primary">
                            <i class="fas fa-box"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value" id="warehouseDetailValue">12,500,000 ₫</h3>
                            <p class="stats-card-label">Tổng giá trị tồn kho</p>
                            <div class="stats-card-change">
                                <span id="warehouseDetailItems">25 nguyên liệu</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 animate-fade-in-delay-1">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-warning">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value" id="warehouseDetailLowStock">3</h3>
                            <p class="stats-card-label">Nguyên liệu sắp hết</p>
                            <div class="stats-card-change">
                                <i class="fas fa-exclamation-triangle me-1 text-warning"></i>
                                <span>Cần nhập thêm hàng</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 animate-fade-in-delay-2">
                    <div class="stats-card">
                        <div class="stats-card-icon gradient-danger">
                            <i class="fas fa-calendar-times"></i>
                        </div>
                        <div class="stats-card-info">
                            <h3 class="stats-card-value" id="warehouseDetailExpired">1</h3>
                            <p class="stats-card-label">Nguyên liệu hết hạn</p>
                            <div class="stats-card-change">
                                <i class="fas fa-calendar-times me-1 text-danger"></i>
                                <span>Cần xử lý ngay</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-4 animate-fade-in animate-fade-in">
                <div class="card-header">
                    <h5>Thông tin kho hàng</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="muted-color  ">Mã kho</label>
                                <p class="mb-0" id="warehouseDetailCode">WH-001</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="muted-color  ">Tên kho</label>
                                <p class="mb-0" id="warehouseDetailName">Kho chính</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="muted-color  ">Vị trí</label>
                                <p class="mb-0" id="warehouseDetailLocation">Tầng 1, 123 Nguyễn Văn Linh, Quận 7, TP.HCM</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="muted-color  ">Ngày tạo</label>
                                <p class="mb-0" id="warehouseDetailCreatedTime">15/01/2023 08:30</p>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="mb-0">
                                <label class="muted-color  ">Ghi chú</label>
                                <p class="mb-0" id="warehouseDetailNote">Kho chứa nguyên liệu chính</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mt-4 animate-fade-in">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#stockLevelsTab">Tồn kho</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#transactionsTab">Lịch sử giao dịch</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#auditsTab">Lịch sử kiểm kê</a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <div class="tab-pane fade show active" id="stockLevelsTab">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="d-flex align-items-center">
                                    <div class="d-flex align-items-center position-relative my-1">
                                        <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                                        <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input-stockLevel" placeholder="Tìm kiếm nguyên liệu ...">
                                    </div>
                                    <div class="form-check ms-3">
                                        <input class="form-check-input" type="checkbox" id="showLowStockOnly">
                                        <label class="form-check-label" for="showLowStockOnly">
                                            Chỉ hiển thị hàng sắp hết
                                        </label>
                                    </div>
                                </div>

                                <div>
                                    <button class="btn btn-outline-secondary me-2">
                                        <i class="fas fa-file-excel me-1"></i> Xuất Excel
                                    </button>
                                    <button class="btn btn-outline-secondary">
                                        <i class="fas fa-print me-1"></i> In
                                    </button>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table id="tableStockLevel" class="table">
                                    <thead>
                                        <tr class="fw-bold fs-6 text-gray-800">
                                            <th>STT</th>
                                            <th>Tên nguyên liệu</th>
                                            <th>Đơn vị</th>
                                            <th>Số lượng</th>
                                            <th>Giá nhập</th>
                                            <th>Thành tiền</th>
                                            <th>Hạn sử dụng</th>
                                            <th>Cập nhật cuối</th>
                                            <th class="">Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="transactionsTab">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="d-flex align-items-center position-relative my-1">
                                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input-transaction" placeholder="Tìm kiếm giao dịch ...">
                                </div>

                                <div>
                                    <button class="btn btn-outline-secondary me-2">
                                        <i class="fas fa-filter me-1"></i> Lọc
                                    </button>
                                    <button class="btn btn-outline-secondary">
                                        <i class="fas fa-sync-alt me-1"></i> Làm mới
                                    </button>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table class="table" id="transactionsTableactionWarehouse">
                                    <thead>
                                        <tr>
                                            <th>Mã giao dịch</th>
                                            <th>Loại</th>
                                            <th>Thời gian</th>
                                            <th>Giá trị</th>
                                            <th>Trạng thái</th>
                                            <th>Người tạo</th>
                                            <th>Ghi chú</th>
                                            <th class="text-end">Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>TX-IN-20230407-001</td>
                                            <td><span class="badge bg-success">Nhập kho</span></td>
                                            <td>07/04/2023 09:15</td>
                                            <td>3,500,000 ₫</td>
                                            <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                            <td>Admin</td>
                                            <td>Nhập hàng định kỳ</td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-icon btn-light">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>TX-OUT-20230407-001</td>
                                            <td><span class="badge bg-danger">Xuất kho</span></td>
                                            <td>07/04/2023 10:30</td>
                                            <td>1,200,000 ₫</td>
                                            <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                            <td>Admin</td>
                                            <td>Xuất hàng cho sản xuất</td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-icon btn-light">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>TX-ADJUST-20230407-001</td>
                                            <td><span class="badge bg-warning text-dark">Điều chỉnh</span></td>
                                            <td>07/04/2023 14:10</td>
                                            <td>350,000 ₫</td>
                                            <td><span class="badge bg-light text-success border border-success">Hoàn thành</span></td>
                                            <td>Admin</td>
                                            <td>Điều chỉnh sau kiểm kê</td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-icon btn-light">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="auditsTab">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <div class="d-flex align-items-center position-relative my-1">
                                    <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6"><span class="path1"></span><span class="path2"></span></i>
                                    <input type="search" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" id="search-input-audit" placeholder="Tìm kiếm kiểm kê ...">
                                </div>

                                <div>
                                    <button class="btn btn-outline-secondary me-2">
                                        <i class="fas fa-calendar-alt me-1"></i> Chọn ngày
                                    </button>
                                    <button class="btn btn-outline-secondary">
                                        <i class="fas fa-file-excel me-1"></i> Xuất báo cáo
                                    </button>
                                </div>
                            </div>

                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Mã kiểm kê</th>
                                            <th>Ngày kiểm kê</th>
                                            <th>Người kiểm kê</th>
                                            <th>Số lượng mục</th>
                                            <th>Số lượng sai lệch</th>
                                            <th>Ghi chú</th>
                                            <th class="text-end">Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>AUDIT-20230407-001</td>
                                            <td>07/04/2023 15:30</td>
                                            <td>Admin</td>
                                            <td>25</td>
                                            <td>3</td>
                                            <td>Kiểm kê định kỳ tháng 4</td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-icon btn-light">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>AUDIT-20230307-001</td>
                                            <td>07/03/2023 14:15</td>
                                            <td>Admin</td>
                                            <td>23</td>
                                            <td>2</td>
                                            <td>Kiểm kê định kỳ tháng 3</td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-icon btn-light">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>AUDIT-20230207-001</td>
                                            <td>07/02/2023 16:00</td>
                                            <td>Admin</td>
                                            <td>20</td>
                                            <td>1</td>
                                            <td>Kiểm kê định kỳ tháng 2</td>
                                            <td class="text-end">
                                                <button class="btn btn-sm btn-icon btn-light">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--end::Content container-->
</div>

<div class="modal fade" id="transactionDetailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <span id="transactionTypeIcon"><i class="fas fa-exchange-alt"></i></span>
                    Chi tiết giao dịch: <span id="transactionCodeTitle"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body scrollable">
                <div class="row">
                    <div class="col-md-8">
                        <div class="card mb-3">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h6 class="mb-0">Thông tin chung</h6>
                                <span class="badge" id="transactionStatusBadge"></span>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="detail-row">
                                            <div class="detail-label">Mã giao dịch:</div>
                                            <div class="detail-value" id="detailTransactionCode"></div>
                                        </div>
                                        <div class="detail-row">
                                            <div class="detail-label">Loại giao dịch:</div>
                                            <div class="detail-value" id="detailTransactionType"></div>
                                        </div>
                                        <div class="detail-row">
                                            <div class="detail-label">Trạng thái:</div>
                                            <div class="detail-value" id="detailTransactionStatus"></div>
                                        </div>
                                        <div class="detail-row">
                                            <div class="detail-label">Kho:</div>
                                            <div class="detail-value" id="detailWarehouse"></div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="detail-row">
                                            <div class="detail-label">Ngày tạo:</div>
                                            <div class="detail-value" id="detailCreatedDate"></div>
                                        </div>
                                        <div class="detail-row">
                                            <div class="detail-label">Người tạo:</div>
                                            <div class="detail-value" id="detailCreatedBy"></div>
                                        </div>
                                        <div class="detail-row">
                                            <div class="detail-label">Tổng tiền:</div>
                                            <div class="detail-value" id="detailTotalAmount"></div>
                                        </div>
                                        <div class="detail-row">
                                            <div class="detail-label">Ghi chú:</div>
                                            <div class="detail-value" id="detailNote"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Chi tiết giao dịch</h6>
                            </div>
                            <div class="card-body px-0 py-0">
                                <div class="table-responsive">
                                    <table class="table table-hover m-0" id="detailItemsTable">
                                        <thead>
                                            <tr>
                                                <th>STT</th>
                                                <th>Mã NL</th>
                                                <th>Tên nguyên liệu</th>
                                                <th>Đơn vị</th>
                                                <th class="text-end">Số lượng</th>
                                                <th class="text-end">Đơn giá</th>
                                                <th class="text-end">Thành tiền</th>
                                                <th>Hạn sử dụng</th>
                                            </tr>
                                        </thead>
                                        <tbody id="detailItemsBody">
                                            <!-- Dữ liệu sẽ được load bằng AJAX -->
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td colspan="6" class="text-end fw-bold">Tổng cộng:</td>
                                                <td class="text-end fw-bold" id="detailGrandTotal"></td>
                                                <td></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                                <!-- Hiển thị thông tin kiểm kê nếu là giao dịch kiểm kê -->
                                <div id="inventoryDetailSection" class="p-3 d-none">
                                    <div class="alert alert-info">
                                        <i class="fas fa-info-circle me-2"></i>
                                        <span id="inventoryDetailInfo"></span>
                                    </div>

                                    <div class="table-responsive mt-3">
                                        <table class="table table-sm table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Nguyên liệu</th>
                                                    <th class="text-end">Số lượng hệ thống</th>
                                                    <th class="text-end">Số lượng thực tế</th>
                                                    <th class="text-end">Chênh lệch</th>
                                                    <th>Lý do</th>
                                                </tr>
                                            </thead>
                                            <tbody id="inventoryDetailTable">
                                                <!-- Dữ liệu sẽ được load bằng AJAX -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="card mb-3">
                            <div class="card-header">
                                <h6 class="mb-0">Thao tác</h6>
                            </div>
                            <div class="card-body">
                                <div id="transactionActions">
                                    <!-- Các nút thao tác sẽ được thêm bằng JavaScript -->
                                </div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">Lịch sử trạng thái</h6>
                            </div>
                            <div class="card-body">
                                <div class="timeline" id="statusTimeline">
                                    <!-- Lịch sử trạng thái sẽ được thêm bằng JavaScript -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="printTransactionBtn">
                    <i class="fas fa-print me-1"></i> In phiếu
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Add Warehouse Modal -->
<div class="modal fade" id="addWarehouseModal" >
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm kho mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addWarehouseForm">
                    <div class="mb-3 d-none">
                        <label for="warehouseId" class="form-label">Mã định danh</label>
                        <input type="text" class="form-control" id="warehouseId" placeholder="Nhập mã định danh" readonly>
                    </div>

                    <div class="mb-3">
                        <label for="warehouseCode" class="form-label">Mã kho</label>
                        <input type="text" class="form-control" id="warehouseCode" placeholder="Nhập mã kho">
                    </div>

                    <div class="mb-3">
                        <label for="warehouseName" class="form-label">Tên kho <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="warehouseName" placeholder="Nhập tên kho" required>
                    </div>

                    <div class="mb-3">
                        <label for="location" class="form-label">Vị trí</label>
                        <input type="text" class="form-control" id="location" placeholder="Nhập vị trí kho">
                    </div>

                    <div class="mb-3">
                        <label for="note" class="form-label">Ghi chú</label>
                        <textarea class="form-control" id="note" rows="3" placeholder="Nhập ghi chú về kho hàng"></textarea>
                    </div>

                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="active" disabled checked>
                            <label class="form-check-label" for="active">Đang hoạt động</label>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class='form-group'>
                            <div class="mb-7 fv-plugins-icon-container">
                                <label class="fw-semibold fs-6 mb-2" id="basic-addon-createdTime">Ngày tạo</label>
                                <div class='form-control date datetimepicker  input-createdTime' id='warehouse-createdTimeDiv' style='padding:0px;'>
                                    <input type='text' autocomplete="off" id="warehouse-createdTime" required class="form-control datepicker" aria-label="createdTime" aria-describedby="basic-addon-createdTime" />
                                    <span class="input-group-addon">
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveWarehouseBtn">Thêm kho</button>
            </div>
        </div>
    </div>
</div>

<!-- Stock In Modal -->
<div class="modal fade" id="stockInModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo phiếu nhập kho</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="stockInForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="transactionCode" class="form-label">Mã phiếu</label>
                            <input type="text" class="form-control" id="transactionCode" value="TX-IN-20230427-001" readonly>
                        </div>
                        <input type="hidden" id="transactionImportId" value="0">
                        <div class="col-md-6">
                            <label for="transactionDate" class="form-label">Ngày giao dịch</label>
                            <input type="text" class="form-control" id="transactionDate" value="27/04/2023" readonly>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="transactionNote" class="form-label">Ghi chú</label>
                        <textarea class="form-control" id="transactionNote" rows="2" placeholder="Nhập ghi chú cho phiếu giao dịch"></textarea>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <label class="form-label mb-0">Chi tiết giao dịch</label>
                            <button type="button" class="btn btn-sm btn-success" id="addItemBtn">
                                <i class="fas fa-plus me-1"></i> Thêm nguyên liệu
                            </button>
                        </div>

                        <div id="itemForm" class="card mb-3 d-none">
                            <div class="card-body bg-light">
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="ingredient" class="form-label">Nguyên liệu</label>
                                        <select class="form-select" id="ingredient">
                                            <option value="">-- Chọn nguyên liệu --</option>
                                            <option value="1">Cà phê Arabica (Kg)</option>
                                            <option value="2">Cà phê Robusta (Kg)</option>
                                            <option value="3">Sữa tươi (Lít)</option>
                                            <option value="4">Đường nâu (Kg)</option>
                                            <option value="5">Siro vani (Chai)</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="quantity" class="form-label">Số lượng</label>
                                        <input type="number" class="form-control" id="quantity" min="1" value="1">
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="unitPrice" class="form-label">Đơn giá (VNĐ)</label>
                                        <input type="number" class="form-control" id="unitPrice" min="0" value="0">
                                    </div>
                                    <div class="col-md-6">
                                        <label for="expirationDate" class="form-label">Hạn sử dụng</label>
                                        <input type="date" class="form-control" id="expirationDate">
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="form-check mb-3">
                                        <input class="form-check-input" type="checkbox" id="newBatch">
                                        <label class="form-check-label" for="newBatch">
                                            Tạo tồn kho mới
                                        </label>
                                    </div>

                                </div>

                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-success me-2" id="confirmItemBtn">Thêm</button>
                                    <button type="button" class="btn btn-secondary" id="cancelItemBtn">Hủy</button>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table" id="itemsTable">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Nguyên liệu</th>
                                        <th>Đơn vị</th>
                                        <th class="text-end">Số lượng</th>
                                        <th>Hạn sử dụng</th>
                                        <th class="text-end">Đơn giá</th>
                                        <th class="text-end">Thành tiền</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td colspan="7" class="text-center py-3 muted-color">Chưa có nguyên liệu nào được thêm</td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="5" class="text-end fw-bold">Tổng cộng:</td>
                                        <td class="text-end fw-bold" id="totalAmount">0 ₫</td>
                                        <td></td>
                                    </tr>
                                </tfoot>            
                            </table>
                        </div>
                    </div>
                </form> 
            </div>      
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="saveDrafTransactionBtn"><i class="fas fa-save"></i>Lưu nháp</button>
                <button type="button" class="btn btn-primary" id="saveTransactionBtn"><i class="fas fa-paper-plane"></i>Lưu và gửi</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="stockLevelDetailModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-boxes me-2"></i>Chi tiết lô hàng: <span id="ingredientNameTitle">Cà phê Arabica</span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Ingredient Summary -->
                <div class="card mb-4">
                    <div class="card-body">
                        <div class="ingredient-summary">
                            <div class="ingredient-icon">
                                <i class="fas fa-box"></i>
                            </div>
                            <div class="ingredient-info">
                                <h5 class="ingredient-name">Cà phê Arabica</h5>
                                <div class="ingredient-meta">
                                    <span class="me-3"><i class="fas fa-tag me-1"></i> ING-001</span>
                                    <span class="me-3"><i class="fas fa-weight me-1"></i> Kg</span>
                                    <span><i class="fas fa-warehouse me-1"></i> Kho chính</span>
                                </div>
                            </div>
                            <div class="ms-auto text-end">
                                <h4 class="mb-0 ingre-toal-quantity">25 Kg</h4>
                                <div class="text-muted small">Tổng số lượng</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="stockBatchList">
                    <!-- Stock Level Details -->
                    <h6 class="mb-3">Danh sách lô hàng</h6>

                    
                    <!-- Add New Stock Level Button -->
                    <div class="text-center mt-4">
                        <button class="btn btn-success" id="addNewBatchBtn">
                            <i class="fas fa-plus me-1"></i> Thêm lô hàng mới
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary">
                    <i class="fas fa-file-excel me-1"></i> Xuất Excel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Stock Out Modal -->
<div class="modal fade" id="stockOutModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo phiếu xuất kho</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="stockOutForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="outTransactionCode" class="form-label">Mã phiếu</label>
                            <input type="text" class="form-control" id="outTransactionCode" value="TX-OUT-20230427-001" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="outTransactionDate" class="form-label">Ngày giao dịch</label>
                            <input type="text" class="form-control" id="outTransactionDate" value="27/04/2023" readonly>
                        </div>
                    </div>

                    <input type="hidden" id="transactionExportId" value="0">

                    <div class="mb-3">
                        <label for="outTransactionNote" class="form-label">Ghi chú</label>
                        <textarea class="form-control" id="outTransactionNote" rows="2" placeholder="Nhập ghi chú cho phiếu giao dịch"></textarea>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <label class="form-label mb-0">Chi tiết giao dịch</label>
                            <button type="button" class="btn btn-sm btn-warning" id="addOutItemBtn">
                                <i class="fas fa-plus me-1"></i> Thêm nguyên liệu
                            </button>
                        </div>

                        <div id="outItemForm" class="card mb-3 d-none">
                            <div class="card-body bg-light">
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="outIngredient" class="form-label">Nguyên liệu</label>
                                        <select class="form-select" id="outIngredient">
                                            <option value="">-- Chọn nguyên liệu --</option>
                                            <option value="1">Cà phê Arabica (Kg) - Còn 25</option>
                                            <option value="2">Cà phê Robusta (Kg) - Còn 18</option>
                                            <option value="3">Sữa tươi (Lít) - Còn 2</option>
                                            <option value="4">Đường nâu (Kg) - Còn 8</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="outQuantity" class="form-label">Số lượng</label>
                                        <input type="number" class="form-control" id="outQuantity" min="1" value="1">
                                    </div>
                                </div>

                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="outUnitPrice" class="form-label">Đơn giá (VNĐ)</label>
                                        <input type="number" class="form-control" id="outUnitPrice" min="0" value="0" readonly>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="outReason" class="form-label">Lý do xuất</label>
                                        <select class="form-select" id="outReason">
                                            <option value="Sản xuất">Sản xuất</option>
                                            <option value="Chuyển kho">Chuyển kho</option>
                                            <option value="Hư hỏng">Hư hỏng</option>
                                            <option value="Hết hạn">Hết hạn</option>
                                            <option value="Khác">Khác</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn btn-warning me-2" id="confirmOutItemBtn">Thêm</button>
                                    <button type="button" class="btn btn-secondary" id="cancelOutItemBtn">Hủy</button>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table" id="outItemsTable">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Nguyên liệu</th>
                                        <th>Đơn vị</th>
                                        <th class="text-end">Số lượng</th>
                                        <th class="text-end">Đơn giá</th>
                                        <th class="text-end">Thành tiền</th>
                                        <th>Lý do</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td colspan="7" class="text-center py-3 muted-color">Chưa có nguyên liệu nào được thêm</td>
                                    </tr>
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="5" class="text-end fw-bold">Tổng cộng:</td>
                                        <td class="text-end fw-bold" id="outTotalAmount">0 ₫</td>
                                        <td></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="saveOutDrafTransactionBtn"><i class="fas fa-save"></i>Lưu nháp</button>
                <button type="button" class="btn btn-primary" id="saveOutTransactionBtn"><i class="fas fa-paper-plane"></i>Lưu và gửi</button>
            </div>
        </div>
    </div>
</div>

<!-- Audit Modal -->
<div class="modal fade" id="auditModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo phiếu kiểm kê kho</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="auditForm">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="auditCode" class="form-label">Mã kiểm kê</label>
                            <input type="text" class="form-control" id="auditCode" value="AUDIT-20230427-001" readonly>
                        </div>
                        <div class="col-md-6">
                            <label for="auditDate" class="form-label">Ngày kiểm kê</label>
                            <input type="text" class="form-control" id="auditDate" value="27/04/2023" readonly>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label for="auditor" class="form-label">Người kiểm kê</label>
                            <input type="text" class="form-control" id="auditor" value="Admin">
                        </div>
                        <div class="col-md-6">
                            <label for="auditNote" class="form-label">Ghi chú</label>
                            <input type="text" class="form-control" id="auditNote" placeholder="Nhập ghi chú cho phiếu kiểm kê">
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <label class="form-label mb-0">Chi tiết kiểm kê</label>
                            <button type="button" class="btn btn-sm btn-info" id="loadStockBtn">
                                <i class="fas fa-sync-alt me-1"></i> Tải dữ liệu tồn kho
                            </button>
                        </div>

                        <div class="table-responsive">
                            <table class="table" id="auditItemsTable">
                                <thead>
                                    <tr>
                                        <th>STT</th>
                                        <th>Nguyên liệu</th>
                                        <th>Đơn vị</th>
                                        <th class="text-end">Số lượng hệ thống</th>
                                        <th class="text-end">Số lượng thực tế</th>
                                        <th class="text-end">Chênh lệch</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr id="loadingRow">
                                        <td colspan="6" class="text-center py-3 muted-color">
                                            Chưa có dữ liệu kiểm kê. Nhấn 'Tải dữ liệu tồn kho' để bắt đầu.
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <div id="auditSummary" class="d-none mt-3">
                            <span class="badge bg-danger" id="discrepancyCount">0 nguyên liệu có sai lệch</span>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveAuditBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Adjust Stock Modal -->
<div class="modal fade" id="adjustStockModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Điều chỉnh số lượng tồn kho</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="adjustStockForm">
                    <div class="mb-3">
                        <label class="form-label">Nguyên liệu</label>
                        <div class="d-flex align-items-center">
                            <div class="bg-light px-3 py-2 rounded flex-grow-1">
                                <span class="fw-medium">Cà phê Arabica</span>
                                <span class="muted-color ms-2">(ING-001)</span>
                            </div>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Đơn vị</label>
                            <div class="bg-light px-3 py-2 rounded">Kg</div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Số lượng hiện tại</label>
                            <div class="bg-light px-3 py-2 rounded">25</div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="newQuantity" class="form-label">Số lượng mới</label>
                        <input type="number" class="form-control" id="newQuantity" min="0" value="25">
                        <div class="form-text text-success" id="quantityDifference"></div>
                    </div>

                    <div class="mb-3">
                        <label for="adjustReason" class="form-label">Lý do điều chỉnh</label>
                        <textarea class="form-control" id="adjustReason" rows="3" placeholder="Nhập lý do điều chỉnh số lượng"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveAdjustmentBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- Transaction History Modal -->
<div class="modal fade" id="transactionHistoryModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-history me-2"></i>Lịch sử giao dịch: Lô <span id="batchNumberTitle"></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="transaction-history-container">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h6 class="mb-0">Lịch sử giao dịch</h6>
                        <div class="btn-group btn-group-sm">
                            <button type="button" class="btn btn-outline-secondary active" data-filter="all">Tất cả</button>
                            <button type="button" class="btn btn-outline-secondary" data-filter="PURCHASE">Nhập hàng</button>
                            <button type="button" class="btn btn-outline-secondary" data-filter="SALE">Xuất bán</button>
                            <button type="button" class="btn btn-outline-secondary" data-filter="ADJUSTMENT">Điều chỉnh</button>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-sm table-hover" id="transactionHistoryTable">
                            <thead>
                                <tr>
                                    <th>STT</th>
                                    <th>Mã giao dịch</th>
                                    <th>Loại giao dịch</th>
                                    <th>Số lượng</th>
                                    <th>Ngày giao dịch</th>
                                    <th>Ghi chú</th>
                                    <th>Người tạo</th>
                                </tr>
                            </thead>
                            <tbody id="transactionHistoryBody">
                                <!-- Dữ liệu lịch sử giao dịch sẽ được thêm vào đây -->
                            </tbody>
                        </table>
                    </div>

                    <div id="noTransactions" class="text-center py-4 d-none">
                        <div class="empty-state">
                            <i class="fas fa-history fa-3x text-muted mb-3"></i>
                            <p class="text-muted">Không có giao dịch nào cho lô hàng này</p>
                        </div>
                    </div>

                    <div id="loadingTransactions" class="text-center py-4 d-none">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Đang tải...</span>
                        </div>
                        <p class="mt-2">Đang tải dữ liệu...</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="exportTransactionHistory">
                    <i class="fas fa-file-excel me-1"></i> Xuất Excel
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Hủy phiếu -->
<div class="modal fade" id="cancelTransactionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Hủy phiếu giao dịch</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="cancelTransactionForm">
                    <input type="hidden" id="cancelTransactionId">

                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Bạn có chắc chắn muốn hủy phiếu giao dịch này không? Hành động này không thể hoàn tác.
                    </div>

                    <div class="mb-3">
                        <label for="cancelReason" class="form-label">Lý do hủy <span class="text-danger">*</span></label>
                        <textarea class="form-control" id="cancelReason" rows="3" placeholder="Vui lòng nhập lý do hủy phiếu" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-danger" id="confirmCancelBtn">
                    <i class="fas fa-trash-alt me-1"></i> Xác nhận hủy
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Xóa phiếu -->
<div class="modal fade" id="deleteTransactionModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xóa phiếu giao dịch</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="deleteTransactionId">

                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Bạn có chắc chắn muốn xóa phiếu giao dịch này không? Hành động này không thể hoàn tác và chỉ nên thực hiện với các phiếu ở trạng thái nháp.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    <i class="fas fa-trash-alt me-1"></i> Xác nhận xóa
                </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateStatusModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cập nhật trạng thái giao dịch</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateStatusForm">
                    <input type="hidden" id="statusTransactionId">

                    <div class="mb-3">
                        <label for="newStatus" class="form-label">Trạng thái mới</label>
                        <select class="form-select" id="newStatus">
                            <option value="pending">Chờ xử lý</option>
                            <option value="completed">Hoàn thành</option>
                        </select>
                    </div>

                    <div class="alert alert-primary">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        Bạn có chắc chắn muốn cập nhật trạng thái phiếu giao dịch này không? Hành động này sẽ tạo các thay đổi với kho hàng.
                    </div>

                    <div class="mb-3" id="reasonWrapper">
                        <label for="statusNote" class="form-label">Ghi chú</label>
                        <textarea class="form-control" id="statusNote" rows="3" placeholder="Nhập lý do cập nhật trạng thái"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveStatusBtn">Lưu thay đổi</button>
            </div>
        </div>
    </div>
</div>


<!--begin:Base load data-->
<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!--end:Base load data-->
<script>
    let currentView = 'grid';
    let currentGridPage = 0;
    let warehousesTable;
    let currentWarehouse;
    let warehouseUpdateId = 0;
    let warehouseTabId = 0;
    let regexFullName = /^[a-zA-Z0-9À-Ỹà-ỹ\s']+$/;
    let currentTransactionHistory = null;
    let currentStockId = null;  
    let currentBatchNumber = null;

    $(document).ready(function() {
        initWarehousesDataTable();
        loadWarehouses();
    });

    function initWarehousesDataTable() {
            warehousesTable = $('#tableWarehouseData').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: { regex: true },
            order: [1, 'desc'],
            "oLanguage": {
                "sUrl": "/js/Vietnamese.json"
            },
            ajax: {
                url: systemURL + "warehouse/api/list-server-side",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    d.searchAll = $("#search-input").val();

                    return JSON.stringify(d);
                }
            },
            columns: [
                {
                    data: 'id',                
                    render: function (data, type, row, meta) {
                        var info = warehousesTable.page.info();
                        var stt = meta.row + 1 + info.page * info.length;
                        return stt; // This contains the row index
                    }
                },

                {
                    data: "warehouseCode",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                    }
                },

                    {
                        data: "warehouseName",
                        render: function (data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id' style='font-weight: bold; color: #044688;'>" + data + '<span>';
                        }
                    },

                        {
                        data: "location",
                        render: function (data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                        }
                    },
                {
                    data: "note",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                    }
                },

                {
                    data: "createdTime",
                    render: function (data) {
                        var tempDate = new Date(data);
                        var displayValue = moment(data).format("DD/MM/YYYY");
                        return displayValue;
                    }
                },

                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        let html = `
                                            <button class="btn btn-sm btn-icon btn-outline-success me-1" data-warehouse-id='${row.id}' onclick='viewDetailWarehouse(${row.id})'>
                                            <i class="fas fa-eye"></i>
                                        </button>
                                            <button class="btn btn-sm btn-icon btn-outline-primary me-1" onclick='editWarehouse(${row.id})'>
                                            <i class="fas fa-edit"></i>
                                        </button>
                                            <button class="btn btn-sm btn-icon btn-outline-danger" onclick='deleteWarehouse(${row.id})'>
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                        `
                        return html;
                    }
                },

            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [-1, 0] },
            ],
            aLengthMenu: [
                [10, 25, 50, 100],
                [10, 25, 50, 100]
            ],
            drawCallback: function (settings) {
                const api = this.api();
                    const pageInfo = api.page.info();
                    // Nếu đang ở chế độ xem lưới, cập nhật grid view
                    if (currentView === 'grid') {
                        updateGridView(settings.json.data);
                        updateGridPagination(pageInfo);
                        // Đồng bộ trang hiện tại
                        currentGridPage = pageInfo.page;
                    }
            }
        });
    }

    function updateGridPagination(pageInfo) {
            const totalPages = pageInfo.pages;
            const currentPage = pageInfo.page;
            if (totalPages <= 1) {
                // Ẩn phân trang nếu chỉ có 1 trang
                $('#gridPagination').addClass('d-none');
                return;
            }

            $('#gridPagination').removeClass('d-none');

            let paginationHtml = '';

            // Nút "Trước"
            paginationHtml += `
                <li class="page-item ${currentPage === 0 ? 'disabled' : ''}">
                    <a class="page-link" href="#" data-page="previous" aria-label="Trước">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            `;

            // Các nút số trang
            const startPage = Math.max(0, currentPage - 2);
            const endPage = Math.min(totalPages - 1, currentPage + 2);

            // Hiển thị "..." nếu không bắt đầu từ trang 0
            if (startPage > 0) {
                paginationHtml += `
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="0">1</a>
                    </li>
                `;

                if (startPage > 1) {
                    paginationHtml += `
                        <li class="page-item disabled">
                            <a class="page-link" href="#">...</a>
                        </li>
                    `;
                }
            }

            // Hiển thị các trang xung quanh trang hiện tại
            for (let i = startPage; i <= endPage; i++) {
                paginationHtml += `
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" data-page="${i}">${i + 1}</a>
                    </li>
                `;
            }

            // Hiển thị "..." nếu không kết thúc ở trang cuối
            if (endPage < totalPages - 1) {
                if (endPage < totalPages - 2) {
                    paginationHtml += `
                        <li class="page-item disabled">
                            <a class="page-link" href="#">...</a>
                        </li>
                    `;
                }

                paginationHtml += `
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${totalPages - 1}">${totalPages}</a>
                    </li>
                `;
            }

            // Nút "Sau"
            paginationHtml += `
                <li class="page-item ${currentPage === totalPages - 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" data-page="next" aria-label="Sau">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            `;

            $('#gridPaginationControls').html(paginationHtml);
        }

    function updateGridView(data) {
            if (!data || data.length === 0) {
                $('#warehouseGridView').html('<div class="col-12 text-center py-4">Không có nguyên liệu nào trong danh mục này.</div>');
                return;
            }

            let gridHtml = '';

            data.forEach(warehouse => {
                // Xác định trạng thái tồn kho
                let warhouseText = warehouse.active ? 'Đang hoạt động' : 'Ngưng hoạt động';   

                // Format ngày tạo
                const createdDate = new Date(warehouse.createdTime);
                const formattedDate = createdDate.toLocaleDateString('vi-VN');

                gridHtml += `
                    <div class="warehouse-card animate-fade-in">
                    <div class="warehouse-card-header">
                            <h5 class="warehouse-card-title mb-2">${warehouse.warehouseName}</h5>
                        <div class="dropdown">
                            <button class="btn btn-sm btn-icon btn-light" data-bs-toggle="dropdown">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" " data-warehouse-id="${warehouse.id}" onclick='viewDetailWarehouse(${warehouse.id})'><i class="fas fa-eye me-2"></i> Xem chi tiết</a></li>
                                                <li><a class="dropdown-item" onclick='editWarehouse(${warehouse.id})'><i class="fas fa-edit me-2"></i> Chỉnh sửa</a></li>
                                        <li><a class="dropdown-item"onclick='deleteWarehouse(${warehouse.id})' ><i class="fas fa-trash-alt me-2"></i> Xóa</a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="warehouse-card-body">
                                    <div class="warehouse-card-title mb-2">Mã kho: ${warehouse.warehouseCode}</div>
                       
                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-map-marker-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">${warehouse.location}</span>
                        </div>

                        <div class="d-flex align-items-start mb-2">
                            <i class="fas fa-calendar-alt mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">Ngày tạo: ${formattedDate}</span>
                        </div>

                        <div class="d-flex align-items-start">
                            <i class="fas fa-sticky-note mt-1 me-2 muted-color"></i>
                            <span class="muted-color  ">${warehouse.note}</span>
                        </div>
                    </div>
                    <div class="warehouse-card-footer">
                        <button class="btn btn-sm btn-outline-primary" onclick='editWarehouse(${warehouse.id})'>
                            <i class="fas fa-edit me-1"></i> Chỉnh sửa
                        </button>
                        <button class="btn btn-sm btn-primary" data-warehouse-id="${warehouse.id}" onclick='viewDetailWarehouse(${warehouse.id})'>
                            <i class="fas fa-eye me-1"></i> Xem chi tiết
                        </button>
                    </div>
                </div>
                `;
            });

            $('#warehouseGridView').html(gridHtml);
        }

    function loadWarehouses() {

            // Hiển thị loading
            $('#warehouseGridView').html('<div class="col-12 text-center py-4"><div class="spinner-border text-primary" role="status"></div><div class="mt-2">Đang tải danh sách nguyên liệu...</div></div>');

            // Reload DataTable với tham số mới
            warehousesTable.ajax.reload();
        }

    $(document).on('click', '#gridPaginationControls .page-link', function(e) {
                e.preventDefault();

                const page = $(this).data('page');

                // Nếu là nút "Trước" hoặc "Sau"
                if (page === 'previous') {
                    warehousesTable.page('previous').draw('page');
                } else if (page === 'next') {
                    warehousesTable.page('next').draw('page');
                } else {
                    // Nếu là nút số trang
                    warehousesTable.page(page).draw('page');
                }
            });

    // Warehouse view toggle
    $('#gridViewBtn').click(function() {
                $(this).addClass('active');
                $('#listViewBtn').removeClass('active');
                $('#warehouseGridView').removeClass('d-none');
                $('#warehouseListView').addClass('d-none');
                $('#gridPagination').removeClass('d-none');
                currentView = 'grid';
                warehousesTable.ajax.reload();
            });

            $('#listViewBtn').click(function() {
                $(this).addClass('active');
                $('#gridViewBtn').removeClass('active');
                $('#warehouseListView').removeClass('d-none');
                $('#warehouseGridView').addClass('d-none');
                $('#gridPagination').addClass('d-none');
                currentView = 'list';
            });

    // detail event
    async function viewDetailWarehouse(id) {
        
        $('.page-content').addClass('d-none');
        $('#warehouseDetailPage').removeClass('d-none');
        warehouseUpdateId = id;
        warehouseTabId = id;
        await loadWarehouseDetails(id);
        destroyTables();  

        initStockLevelTb();

        loadAllTransaction();

        getIngredientStockSummary();
    }

    function destroyTables() {
            $('#tableStockLevel').DataTable().destroy();
            $('#transactionsTableactionWarehouse').DataTable().destroy();
    }

    // Back to warehouses list
                $('#backToWarehouses').click(function() {
                    
                    warehouseUpdateId = 0;
                    warehouseTabId = 0;

                    // Hide all pages and show the warehouses page
                    $('.page-content').addClass('d-none');
                    $('#warehousesPage').removeClass('d-none');
                });

                async function editWarehouse(id) {
                    $('#addWarehouseForm')[0].reset();
                    $('#addWarehouseModal').modal('show');
                    if(id > 0) {
                        currentWarehouse = await getWarehouseById(id);
                    }
                    warehouseUpdateId = id;
                            $("#warehouseId").val(id > 0 ? currentWarehouse.id : "0");
                        $('#warehouseCode').val(id > 0 ? currentWarehouse.warehouseCode : '');
                        $('#warehouseName').val(id > 0 ? currentWarehouse.warehouseName : '');
                        $('#location').val(id > 0 ? currentWarehouse.location : '');
                        $('#note').val(id > 0 ? currentWarehouse.note : '');
                        $("#warehouse-createdTime").val(id > 0 ? moment(currentWarehouse.createdTime).format("DD/MM/YYYY HH:mm:ss") : moment(new Date()).format("DD/MM/YYYY HH:mm:ss"));
                }

            $('#btnEditWarehouse').click(function() {
                 editWarehouse(warehouseUpdateId);
            });

    // Save warehouse addOrpdate
            $('#saveWarehouseBtn').click(function(e) {
                e.preventDefault();
                    updateWarehouse(warehouseUpdateId);
                    $('#addWarehouseModal').modal('hide');
                    $('#addWarehouseForm')[0].reset();
                    warehouseUpdateId = 0;
                    
            });

        function enableBtnSubmit() {
                $('#saveWarehouseBtn').removeAttr('data-kt-indicator');
                $('#saveWarehouseBtn').disabled = false;
        }
                function validateInputWarehouse(id) {
                var updatingItemId = id;
                var errorList = [];

                if ($("#warehouseName").val() == '') {
                    errorList.push('Tên kho không được để trống.');
                    }
                else if (!$("#warehouseName").val().match(regexFullName)) {
                    errorList.push('Tên kho không được chứa kí tự đặc biệt.');
                }

                if ($("#warehouseName").val().length > 255) {
                    errorList.push('Tên kho có độ dài tối đa là 255 ký tự.');
                }

                if (errorList.length > 0) {
                    var contentError = '<ul>';
                    errorList.forEach(function (item, index) {
                        contentError += "<li class='text-start'>" + item + '</li>';
                    });
                    contentError += '</ul>';
                    var swalSubTitle =
                        "<p class='swal__admin__subtitle'>" +
                        (updatingItemId > 0 ? 'Cập nhật' : 'Thêm mới') +
                        ' không thành công</p>';

                    Swal.fire('Quản lý kho ' + swalSubTitle, contentError, 'warning');
                    enableBtnSubmit();
                    return false;
                } else {
                    return true;
                }
            }

    // addOrUpdate warehouse function
        async function updateWarehouse(id) {
            const submitButton = $('#saveWarehouseBtn');
            if (!validateInputWarehouse($("#warehouseId").val())) return;
                var updatingObj = {
                    "id": $("#warehouseId").val(),
                    "warehouseCode": $("#warehouseCode").val(),
                    "warehouseName": $("#warehouseName").val(),
                    "note": $("#note").val(),
                    "location": $('#location').val(),
                    "active": true,
                    "createdTime": formatDatetimeUpdate($("#warehouse-createdTime").val()),
                };
            var actionName = (id == 0 ? "Bạn muốn tạo mới" : "Cập nhật");
            var obj;
            if (id > 0) {
                obj = await getWarehouseById(id);
            }
            let objName = id > 0 ? obj.warehouseName : $("#warehouseName").val();
            
            Swal.fire({
                title: 'Xác nhận thay đổi?',
                text: "" + actionName + " " + objName + "",
                icon: 'info',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#443',
                confirmButtonText: 'Xác nhận',
                cancelButtonText: 'Huỷ'
            }).then((result) => {
                if (result.value) {
                    
                    //CALL AJAX TO UPDATE
                    if (id > 0) {
                        $.ajax({
                            url: systemURL + "warehouse/api/update",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                // debugger;
                                if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                    Swal.fire(
                                        'Thành Công!',
                                        'Đã cập nhật "' + objName + '" ',
                                        'success'
                                    );
                                        warehousesTable.ajax.reload();
                                        loadWarehouseDetails(updatingObj.id);
                                    // Remove loading indication
                                    submitButton.removeAttr('data-kt-indicator');
                                    // Enable button
                                    submitButton.disabled = false;
                                }
                            },
                            error: function (e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Lỗi!',
                                    'Đã xảy ra lỗi, vui lòng thử lại',
                                    'error'
                                );
                                // Remove loading indication
                                submitButton.removeAttr('data-kt-indicator');
                                // Enable button
                                submitButton.disabled = false;
                            }
                        });
                    };
                    //CALL AJAX TO CREATE
                    if (id == 0) {
                        updatingObj.id = 1;
                        delete updatingObj["id"]
                        updatingObj.active = true;
                        updatingObj.createdTime = new Date();
                        
                        $.ajax({
                            url: systemURL + "warehouse/api/addNewStock",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(updatingObj),
                            success: function (responseData) {
                                // debugger;
                                if (responseData.status == 201 && responseData.message === "CREATED") {
                                    Swal.fire(
                                        'Thành công!',
                                        'Đã cập nhật dữ liệu',
                                        'success'
                                    );
                                    
                                    warehousesTable.ajax.reload();
                                    // Remove loading indication
                                    submitButton.removeAttr('data-kt-indicator');
                                    // Enable button
                                    submitButton.disabled = false;
                                }
                            },
                            error: function (e) {
                                //console.log(e.message);
                                Swal.fire(
                                    'Lỗi!',
                                    'Đã xảy ra lỗi, vui lòng thử lại',
                                    'error'
                                );
                                // Remove loading indication
                                submitButton.removeAttr('data-kt-indicator');
                                // Enable button
                                submitButton.disabled = false;
                            }
                        });
                    }
                }
                else {
                    // Remove loading indication
                    submitButton.removeAttr('data-kt-indicator');
                    // Enable button
                    submitButton.disabled = false;
                }
            })
        }

        async function deleteWarehouse(id) {
            let delWarehouse = warehousesTable.ajax.json().data.find(c => c.id == id);
            let objName = id > 0 ? delWarehouse.warehouseName : $("#warehouseName").val();
            Swal.fire({
                title: 'Xác nhận thay đổi?',
                text: "Xóa " + objName + "",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xoá',
                cancelButtonText: 'Huỷ'
            }).then((result) => {
                if (result.value) {
                    //CALL AJAX TO DELETE
                    $.ajax({
                        url: systemURL + "warehouse/api/delete",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify({ "id": id, "warehouseName": delWarehouse.warehouseName }),
                        success: function (responseData) {
                            // debugger;
                            if (responseData.status == 200 && responseData.message === "SUCCESS") {
                                Swal.fire(
                                    'Thành công!',
                                        'Đã xoá ' + delWarehouse.warehouseName + '.',
                                    'success'
                                );
                                warehousesTable.ajax.reload();
                            }
                        },
                        error: function (e) {
                            //console.log(e.message);
                            Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
                        }
                    });

                }
                else {
                    // Remove loading indication
                    submitButton.removeAttribute('data-kt-indicator');
                    // Enable button
                    submitButton.disabled = false;
                }
            })
        }


    let stockTable;
        function initStockLevelTb() {
        stockTable = $('#tableStockLevel').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
            searching: { regex: true },
            order: [1, 'desc'],
            "oLanguage": {
                "sUrl": "/js/Vietnamese.json"
            },
            ajax: {
                url: systemURL + "stockLevel/api/list-server-side",
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                data: function (d) {
                    d.searchAll = $("#search-input-stockLevel").val();
                    d.warehouseId = warehouseTabId;
                    d.isWarning = showLowStockOnly.checked
                    return JSON.stringify(d);
                }
            },
                createdRow: function (row, data, dataIndex) {
        // Xác định index của các cột cần thao tác
        const quantityColIndex = 3;
        const expirationDateColIndex = 6;

        if (data.status === "warning") {
            $(row).addClass('table-warning');
            $('td', row).eq(quantityColIndex).addClass('text-warning fw-bold');
        }

        if (data.status === "danger") {
            $(row).addClass('table-danger');
            $('td', row).eq(quantityColIndex).addClass('text-danger fw-bold');

            // Thêm chữ " (Hết hạn)" vào ô expirationDate
            const $expCell = $('td', row).eq(expirationDateColIndex);
            const originalText = $expCell.text();
            $expCell
                .addClass('text-danger')
                .text(originalText + ' (Hết hạn)');
        }
    },
            columns: [
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                        var info = stockTable.page.info();
                        var stt = meta.row + 1 + info.page * info.length;
                        return stt; // This contains the row index
                    }
                },
                {
                        data: "ingredientName",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                    }
                },
                {
                        data: "unitName",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                    }
                },
                {
                        data: "quantity",
                    render: function (data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                    }
                },
                {
                        data: "unitPrice",
                    render: function (data, type, row, meta) {
                        return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                    }
                },
                    {
                                data: "totalPrice",
                        render: function (data, type, row, meta) {
                            return "<span id='row" + row.id + "-column-id'>" + data + '<span>';
                        }
                    },
                {
                    data: "expirationDate",
                    render: function (data) {
                        var tempDate = new Date(data);
                        var displayValue = moment(data).format("DD/MM/YYYY HH:mm:ss");
                        return displayValue;
                    }
                },
                {
                            data: "lastUpdatedTime",
                    render: function (data) {
                        var tempDate = new Date(data);
                        var displayValue = moment(data).format("DD/MM/YYYY HH:mm:ss");
                        return displayValue;
                    }
                },
                
                {
                    data: 'id',
                    render: function (data, type, row, meta) {
                            var rowJson = JSON.stringify(row).replace(/"/g, '&quot;');
                        var htmlActions = `<div class="dropdown">
                                                        <button class="btn btn-sm btn-icon btn-light" data-bs-toggle="dropdown">
                                                            <i class="fas fa-ellipsis-h"></i>
                                                        </button>
                                                        <ul class="dropdown-menu dropdown-menu-end">
                                                                    <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#stockLevelDetailModal" data-ingredient-id="${row.ingredientId}" data-ing-obj="${rowJson}"-"><i class="fas fa-list-ul me-2"></i> Xem chi tiết lô</a></li>
                                                            <li><a class="dropdown-item" onclick='adjustQuanity(${row.id})'><i class="fas fa-sliders-h me-2"></i> Điều chỉnh số lượng</a></li>
                                                            <li><a class="dropdown-item" onclick='viewHistory(${row.id})'><i class="fas fa-eye me-2"></i> Xem lịch sử</a></li>
                                                        </ul>
                                                    </div>`
                            return htmlActions;
                    }
                },

            ],
            columnDefs: [
                { targets: "no-sort", orderable: false },
                { targets: "no-search", searchable: false },
                { orderable: false, targets: [-1, 0] },
            ],
            aLengthMenu: [
                [10, 25, 50, 100],
                [10, 25, 50, 100]
            ],
            drawCallback: function () {
                // $('#tableStockLevel tfoot').html("");
                // $("#tableStockLevel thead:nth-child(1) tr").clone(true).appendTo("#tableData tfoot");
                // $('#tableStockLevel tfoot tr').addClass("border-top");
            }
        });
    }

        $('#showLowStockOnly').on('change', function () {
        stockTable.ajax.reload();
    });

            $('#search-input-stockLevel').on("input",function () {
                    stockTable.search($(this).val()).draw();
            });

        function reGenTableStock() {
                stockTable.destroy();
                // $(".tableHeaderFilter").val(null).trigger("change");
                    $("#tableStockLevel tbody").html('');
                    initStockLevelTb();
            }

        
        // Stock In Modal
            $('#addItemBtn').click(function() {
                $('#itemForm').removeClass('d-none');
            });

            $('#cancelItemBtn').click(function() {
                $('#itemForm').addClass('d-none');
            });

             $('#confirmItemBtn').click(function() {
                 confirmItemProcess();
             });

             // Remove item
            $(document).on('click', '.remove-item', function() {
                $(this).closest('tr').remove();

                // Update row numbers
                $('#itemsTable tbody tr').each(function(index) {
                    $(this).find('td:first').text(index + 1);
                });

                // Update total amount
                updateTotalAmount();

                // If no items left, show empty message
                if ($('#itemsTable tbody tr').length === 0) {
                    $('#itemsTable tbody').html('<tr><td colspan="7" class="text-center py-3 muted-color">Chưa có nguyên liệu nào được thêm</td></tr>');
                }
            });

    $('#stockLevelDetailModal').on('hidden.bs.modal', function () {
        // Reset dữ liệu
        currentIngredientId = null;
        currentIngredientData = null;
        currentStockBatches = [];

        // Reset form điều chỉnh
        $('.adjustment-form').each(function() {
            const collapseId = $(this).closest('.collapse').attr('id');
            if ($('#' + collapseId).hasClass('show')) {
                $('#' + collapseId).collapse('hide');
            }
        });
    });

            $(document).on('click', 'a[data-bs-target="#stockLevelDetailModal"]', function(e) {
                    const button = $(e.relatedTarget);
                        const ingredientId = $(this).data('ingredient-id');
                    const obj = $(this).data('ing-obj');
                    currentIngredientData = obj;
                    // Update modal title with ingredient name
                    $('#ingredientNameTitle').text(obj.ingredientName);
                    $('.ingre-toal-quantity').text(`${obj.quantity} ${obj.unitName}`);
                    // In a real application, you would fetch the stock level details for this ingredient
                    // For demo purposes, we're using static data

                    // Update ingredient summary
                    $('.ingredient-name').text(obj.ingredientName);
                        let metaHtml = '';
                                
                                metaHtml += `<span class="me-3"><i class="fas fa-weight me-1"></i> ${obj.unitName || 'N/A'}</span>`;
                                    metaHtml += `<span><i class="fas fa-warehouse me-1"></i> ${obj.warehouseName || 'N/A'}</span>`;
                        $('.ingredient-meta').html(metaHtml);
                        getStockBatches(obj.warehouseId, ingredientId)
                });



    function confirmItemProcess() {
        const ingredient = $('#ingredient').val();
                const ingredientText = $('#ingredient option:selected').text();
                const quantity = $('#quantity').val();
                const unitPrice = $('#unitPrice').val();
                const exDate = $('#expirationDate').val();
                const newBatch = $('#newBatch').is(':checked');

                if (!ingredient || quantity <= 0 || unitPrice <= 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng điền đầy đủ thông tin nguyên liệu!'
                    });
                    return;
                }

                const match1 = ingredientText.match(/^(.*?)\s*-\s*([\d.,]+.*₫)\s*\((.*?)\)$/);

                    // Extract ingredient name and unit
                const ingredientParts = ingredientText.split(' (');
                const ingredientName = match1[1].trim();
                const unit = match1[3].trim();

                // Calculate total
                const total = quantity * unitPrice;

                // Add item to table
                const rowCount = $('#itemsTable tbody tr').length;
                const rowIndex = rowCount === 1 && $('#itemsTable tbody tr td').attr('colspan') ? 0 : rowCount;

                if (rowIndex === 0) {
                    $('#itemsTable tbody').empty();
                }

                const newRow = `
                    <tr data-newbatch='${newBatch}' data-ingredient-id="${ingredient}" data-item-id="0">
                        <td>${rowIndex + 1}</td>
                        <td>${ingredientName}</td>
                        <td>${unit}</td>
                        <td class="text-end">${quantity}</td>
                        <td>${exDate}</td>
                        <td class="text-end">${formatCurrencyPrice(unitPrice)}</td>
                        <td class="text-end">${formatCurrencyPrice(total)}</td>
                        <td class="text-end">
                            <button type="button" class="btn btn-sm btn-icon btn-danger remove-item">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                `;

                $('#itemsTable tbody').append(newRow);

                // Update total amount
                updateTotalAmount();

                // Reset form
                $('#ingredient').val('');
                $('#quantity').val(1);
                $('#unitPrice').val(0);
                $('#expirationDate').val('');

                // Hide form
                $('#itemForm').addClass('d-none');
    }

    // Stock Out Modal
            $('#addOutItemBtn').click(function() {
                $('#outItemForm').removeClass('d-none');
            });

            $('#cancelOutItemBtn').click(function() {
                $('#outItemForm').addClass('d-none');
            });

            $('#confirmOutItemBtn').click(function() {
                const ingredient = $('#outIngredient').val();
                const ingredientText = $('#outIngredient option:selected').text();
                const quantity = $('#outQuantity').val();
                const unitPrice = $('#outUnitPrice').val() || 0;
                const note = $('#outReason').val() || '';

                if (!ingredient || quantity <= 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng điền đầy đủ thông tin nguyên liệu!'
                    });
                    return;
                }
                const match2 = ingredientText.match(/^(.*?)\s*-\s*còn\s*(\d+)\s*\(([^)]+)\)$/);
                // Extract ingredient name and unit
                const ingredientParts = ingredientText.split(' (');
                const ingredientNameParts = ingredientParts[0].split(' - ');
                const ingredientName = match2[1];
                const unit = match2[3];
                const avaiable = match2[2];

                if(quantity > avaiable) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Số lượng xuất kho vượt quá giới hạn!'
                    });
                    return;
                }

                // Calculate total
                const total = quantity * unitPrice;

                // Add item to table
                const rowCount = $('#outItemsTable tbody tr').length;
                const rowIndex = rowCount === 1 && $('#outItemsTable tbody tr td').attr('colspan') ? 0 : rowCount;

                if (rowIndex === 0) {
                    $('#outItemsTable tbody').empty();
                }

                const newRow = `
                    <tr data-ingredient-id="${ingredient}" data-item-id="0">
                        <td>${rowIndex + 1}</td>
                        <td>${ingredientName}</td>
                        <td>${unit}</td>
                        <td class="text-end">${quantity}</td>
                        <td class="text-end">${formatCurrencyPrice(unitPrice)}</td>
                        <td class="text-end">${formatCurrencyPrice(total)}</td>
                        <td>${note}</td>
                        <td class="text-end">
                            <button type="button" class="btn btn-sm btn-icon btn-danger remove-out-item">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                `;

                $('#outItemsTable tbody').append(newRow);

                // Update total amount
                updateOutTotalAmount();

                // Reset form
                $('#outIngredient').val('');
                $('#outQuantity').val(1);
                $('#outUnitPrice').val(0);
                $('#outReason').val('production');

                // Hide form
                $('#outItemForm').addClass('d-none');
            });

            // Remove out item
            $(document).on('click', '.remove-out-item', function() {
                $(this).closest('tr').remove();

                // Update row numbers
                $('#outItemsTable tbody tr').each(function(index) {
                    $(this).find('td:first').text(index + 1);
                });

                // Update total amount
                updateOutTotalAmount();

                // If no items left, show empty message
                if ($('#outItemsTable tbody tr').length === 0) {
                    $('#outItemsTable tbody').html('<tr><td colspan="7" class="text-center py-3 muted-color">Chưa có nguyên liệu nào được thêm</td></tr>');
                }
            });

            // Audit Modal
            $('#loadStockBtn').click(function() {
                // Show loading indicator
                $('#loadingRow').html(`
                    <td colspan="6" class="text-center py-3">
                        <div class="d-flex justify-content-center">
                            <div class="spinner-border spinner-border-sm text-primary me-2" role="status"></div>
                            <span>Đang tải dữ liệu tồn kho...</span>
                        </div>
                    </td>
                `);

                // Simulate API call delay
                setTimeout(function() {
                    // Sample data
                    const stockItems = [
                        { id: 1, name: 'Cà phê Arabica', unit: 'Kg', quantity: 25 },
                        { id: 2, name: 'Cà phê Robusta', unit: 'Kg', quantity: 18 },
                        { id: 3, name: 'Sữa tươi', unit: 'Lít', quantity: 2 },
                        { id: 4, name: 'Đường nâu', unit: 'Kg', quantity: 8 },
                        { id: 5, name: 'Siro vani', unit: 'Chai', quantity: 0 }
                    ];

                    // Clear loading indicator
                    $('#auditItemsTable tbody').empty();

                    // Add items to table
                    stockItems.forEach((item, index) => {
                        const row = `
                            <tr>
                                <td>${index + 1}</td>
                                <td>${item.name}</td>
                                <td>${item.unit}</td>
                                <td class="text-end">${item.quantity}</td>
                                <td class="text-end">
                                    <input type="number" class="form-control form-control-sm text-end actual-quantity"
                                           data-expected="${item.quantity}" min="0" value="${item.quantity}">
                                </td>
                                <td class="text-end discrepancy">0</td>
                            </tr>
                        `;

                        $('#auditItemsTable tbody').append(row);
                    });

                    // Show summary
                    $('#auditSummary').removeClass('d-none');

                    // Initialize actual quantity change event
                    $('.actual-quantity').on('input', function() {
                        const expected = parseFloat($(this).data('expected'));
                        const actual = parseFloat($(this).val()) || 0;
                        const discrepancy = actual - expected;

                        const discrepancyCell = $(this).closest('tr').find('.discrepancy');
                        discrepancyCell.text(discrepancy);

                        if (discrepancy !== 0) {
                            discrepancyCell.addClass(discrepancy > 0 ? 'text-success' : 'text-danger');
                            discrepancyCell.removeClass(discrepancy > 0 ? 'text-danger' : 'text-success');
                        } else {
                            discrepancyCell.removeClass('text-success text-danger');
                        }

                        // Update discrepancy count
                        updateDiscrepancyCount();
                    });
                }, 1000);
            });

            // Save audit
            $('#saveAuditBtn').click(function() {
                if ($('#auditItemsTable tbody tr').length === 0 || $('#loadingRow').length > 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng tải dữ liệu tồn kho trước khi lưu!'
                    });
                    return;
                }

                if (!$('#auditor').val().trim()) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng nhập tên người kiểm kê!'
                    });
                    return;
                }

                // In a real app, you would save the audit to the server
                Swal.fire({
                    icon: 'success',
                    title: 'Thành công',
                    text: 'Đã tạo phiếu kiểm kê thành công!'
                }).then(() => {
                    $('#auditModal').modal('hide');
                    $('#auditForm')[0].reset();
                    $('#auditItemsTable tbody').html(`
                        <tr id="loadingRow">
                            <td colspan="6" class="text-center py-3 muted-color">
                                Chưa có dữ liệu kiểm kê. Nhấn 'Tải dữ liệu tồn kho' để bắt đầu.
                            </td>
                        </tr>
                    `);
                    $('#auditSummary').addClass('d-none');
                });
            });

            // Adjust Stock Modal
            $('#newQuantity').on('input', function() {
                const currentQuantity = 25; // In a real app, this would be dynamic
                const newQuantity = parseFloat($(this).val()) || 0;
                const difference = newQuantity - currentQuantity;

                if (difference !== 0) {
                    const text = difference > 0 ? `Tăng ${difference} Kg` : `Giảm ${Math.abs(difference)} Kg`;
                    const className = difference > 0 ? 'text-success' : 'text-danger';

                    $('#quantityDifference').text(text).removeClass('text-success text-danger').addClass(className);
                } else {
                    $('#quantityDifference').text('');
                }
            });

            // Save adjustment
            $('#saveAdjustmentBtn').click(function() {
                const newQuantity = parseFloat($('#newQuantity').val());
                const reason = $('#adjustReason').val();

                if (isNaN(newQuantity) || newQuantity < 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng nhập số lượng hợp lệ!'
                    });
                    return;
                }

                if (newQuantity === 25 && !reason.trim()) { // 25 is the current quantity in our example
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Số lượng không thay đổi. Vui lòng nhập số lượng mới hoặc hủy thao tác.'
                    });
                    return;
                }

                if (!reason.trim()) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng nhập lý do điều chỉnh!'
                    });
                    return;
                }

                // In a real app, you would save the adjustment to the server

                Swal.fire({
                    icon: 'success',
                    title: 'Thành công',
                    text: 'Đã điều chỉnh số lượng thành công!'
                }).then(() => {
                    $('#adjustStockModal').modal('hide');
                    $('#adjustStockForm')[0].reset();
                });
            });

            // Initialize charts
            initCharts();

            // Helper functions
            function formatCurrencyPrice(value) {
                return new Intl.NumberFormat('vi-VN', { minimumFractionDigits: 0 }).format(value) + ' ₫';
            }

            function updateTotalAmount() {
                let total = 0;

                $('#itemsTable tbody tr').each(function() {
                    if (!$(this).find('td').attr('colspan')) {
                        const rowTotal = parseFloat($(this).find('td:eq(5)').text().replace(/[^\d]/g, '')) || 0;
                        total += rowTotal;
                    }
                });

                $('#totalAmount').text(formatCurrencyPrice(total));
            }

            function updateOutTotalAmount() {
                let total = 0;

                $('#outItemsTable tbody tr').each(function() {
                    if (!$(this).find('td').attr('colspan')) {
                        const rowTotal = parseFloat($(this).find('td:eq(5)').text().replace(/[^\d]/g, '')) || 0;
                        total += rowTotal;
                    }
                });

                $('#outTotalAmount').text(formatCurrencyPrice(total));
            }

            function updateDiscrepancyCount() {
                let count = 0;

                $('.actual-quantity').each(function() {
                    const expected = parseFloat($(this).data('expected'));
                    const actual = parseFloat($(this).val()) || 0;

                    if (expected !== actual) {
                        count++;
                    }
                });

                $('#discrepancyCount').text(`${count} nguyên liệu có sai lệch`);
            }

            async function loadWarehouseDetails(warehouseId) {
                // In a real app, you would fetch this data from the server
                let warehouse = null;
                if (warehouseId > 0) {
                    warehouse = await getWarehouseById(warehouseId);
                }

                currentWarehouse = warehouse;

                if (warehouse) {
                    // Update warehouse details
                        $('#warehouseDetailTitle').text(warehouse.warehouseName);
                    $('#warehouseDetailStatus').text('');
                    $('#warehouseDetailStatus').removeClass('bg-primary bg-secondary').addClass(warehouse.active ? 'bg-primary' : 'bg-secondary');

                    $('#warehouseDetailCode').text(warehouse.warehouseCode);
                    $('#warehouseDetailName').text(warehouse.warehouseName);
                    $('#warehouseDetailLocation').text(warehouse.location);
                    $('#warehouseDetailCreatedTime').text(warehouse.createdTime);
                    $('#warehouseDetailNote').text(warehouse.note);

                    let total = warehouse.itemsStored;
                    let ls = warehouse.lowStock ? warehouse.lowStock : 0;
                    let exp = warehouse.expired ? warehouse.expired : 0;

                    $('#warehouseDetailValue').text(formatCurrencyPrice(warehouse.totalValue));
                    $('#warehouseDetailItems').text(`${total} nguyên liệu`);
                            $('#warehouseDetailLowStock').text(`${ls}`);
                        $('#warehouseDetailExpired').text(`${exp}`);
                }
            }

            function initCharts() {
                // Stock Level Chart
                const stockLevelCtx = document.getElementById('stockLevelChart').getContext('2d');
                const stockLevelChart = new Chart(stockLevelCtx, {
                    type: 'line',
                    data: {
                        labels: ['01/04', '02/04', '03/04', '04/04', '05/04', '06/04', '07/04'],
                        datasets: [
                            {
                                label: 'Giá trị tồn kho',
                                data: [18500000, 19200000, 20100000, 21500000, 22800000, 23500000, 24500000],
                                borderColor: '#6c5ce7',
                                backgroundColor: 'rgba(108, 92, 231, 0.1)',
                                borderWidth: 2,
                                tension: 0.3,
                                fill: true
                            },
                            {
                                label: 'Số lượng nguyên liệu',
                                data: [42, 45, 48, 52, 55, 56, 48],
                                borderColor: '#00b894',
                                backgroundColor: 'rgba(0, 184, 148, 0.1)',
                                borderWidth: 2,
                                tension: 0.3,
                                fill: true,
                                yAxisID: 'y1'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return value / 1000000 + 'M';
                                    }
                                }
                            },
                            y1: {
                                position: 'right',
                                beginAtZero: true,
                                grid: {
                                    drawOnChartArea: false
                                }
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.datasetIndex === 0) {
                                            label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.raw);
                                        } else {
                                            label += context.raw;
                                        }
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });

                // Transaction Chart
                const transactionCtx = document.getElementById('transactionChart').getContext('2d');
                const transactionChart = new Chart(transactionCtx, {
                    type: 'bar',
                    data: {
                        labels: ['01/04', '02/04', '03/04', '04/04', '05/04', '06/04', '07/04'],
                        datasets: [
                            {
                                label: 'Nhập kho',
                                data: [3500000, 4200000, 3800000, 5100000, 4800000, 6200000, 8500000],
                                backgroundColor: '#00b894',
                                borderRadius: 4
                            },
                            {
                                label: 'Xuất kho',
                                data: [2100000, 1800000, 2500000, 3200000, 2900000, 3500000, 6200000],
                                backgroundColor: '#ff7675',
                                borderRadius: 4
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return value / 1000000 + 'M';
                                    }
                                }
                            }
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        label += new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.raw);
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
            }
</script>

<script>
    async function getWarehouseById(id) {
        var data;
        await $.ajax({
            url: systemURL + "warehouse/api/detaildto/" + id,
            method: "GET",
            success: function (responseData) {
                data = responseData.data[0];
            },
            error: function (e) {
            },
        });
        return data;
    }
</script>

<script>

    // Xử lý sự kiện khi click vào nút "Lịch sử"
    $(document).on('click', '.view-history', function() {
        const stockId = $(this).data('stock-id');
        const batchNumber = $(this).data('batch-number');

        // Lưu thông tin lô hàng hiện tại
        currentStockId = stockId;
        currentBatchNumber = batchNumber;

        // Hiển thị số lô trong tiêu đề modal
        $('#batchNumberTitle').text(batchNumber);

        // Hiển thị loading
        showTransactionHistoryLoading();

        // Gọi API để lấy lịch sử giao dịch
        getTransactionHistory(stockId);

        // Hiển thị modal lịch sử giao dịch
        $('#transactionHistoryModal').modal('show');
    });

    // Function hiển thị loading trong modal lịch sử giao dịch
    function showTransactionHistoryLoading() {
        $('#transactionHistoryBody').empty();
        $('#noTransactions').addClass('d-none');
        $('#loadingTransactions').removeClass('d-none');
    }

    // Function gọi API để lấy lịch sử giao dịch
    function getTransactionHistory(stockId) {
        $.ajax({
            url: systemURL + "StockLevel/api/" + stockId + "/history",
            type: "GET",
            contentType: "application/json",
            success: function(response) {
                // Lưu dữ liệu vào biến toàn cục
                currentTransactionHistory = response;

                // Hiển thị dữ liệu lịch sử giao dịch
                displayTransactionHistory(response);

                // Ẩn loading
                $('#loadingTransactions').addClass('d-none');
            },
            error: function(error) {
                // Ẩn loading và hiển thị thông báo lỗi
                $('#loadingTransactions').addClass('d-none');
                $('#transactionHistoryBody').html('<tr><td colspan="7" class="text-center text-danger">Đã xảy ra lỗi khi tải dữ liệu. Vui lòng thử lại sau.</td></tr>');
                Swal.fire(
                                'Lỗi!',
                                'Đã xảy ra lỗi, vui lòng thử lại',
                                'error'
                            );
            }
        });
    }

    // Function hiển thị lịch sử giao dịch
    function displayTransactionHistory(transactions) {
        const tbody = $('#transactionHistoryBody');
        tbody.empty();

        if (transactions && transactions.length > 0) {
            // Ẩn thông báo không có giao dịch
            $('#noTransactions').addClass('d-none');

            // Hiển thị dữ liệu giao dịch
            transactions.forEach((transaction, index) => {
                const row = $('<tr>');

                // Xác định màu sắc và class dựa trên loại giao dịch
                let typeClass = '';
                let typeDisplay = '';
                let quantityClass = transaction.quantity > 0 ? 'positive' : 'negative';
                let quantityPrefix = transaction.quantity > 0 ? '+' : '';

                switch (transaction.transactionType) {
                    case 'PURCHASE':
                        typeClass = 'purchase';
                        typeDisplay = 'Nhập hàng';
                        break;
                    case 'SALE':
                        typeClass = 'sale';
                        typeDisplay = 'Xuất bán';
                        break;
                    case 'ADJUSTMENT_IN':
                        typeClass = 'adjustment-in';
                        typeDisplay = 'Điều chỉnh tăng';
                        break;
                    case 'ADJUSTMENT_OUT':
                        typeClass = 'adjustment-out';
                        typeDisplay = 'Điều chỉnh giảm';
                        break;
                    case 'CANCEL':
                        typeClass = 'waste';
                        typeDisplay = 'Hủy bỏ';
                        break;
                    default:
                        typeDisplay = transaction.transactionType;
                }

                row.append(`<td>${index + 1}</td>`);
                row.append(`<td>${transaction.transactionCode}</td>`);
                row.append(`<td><span class="transaction-type ${typeClass}">${typeDisplay}</span></td>`);
                row.append(`<td><span class="transaction-quantity ${quantityClass}">${quantityPrefix}${formatNumberSt(transaction.quantity)}</span></td>`);
                row.append(`<td>${formatDateTimeSt(new Date(transaction.transactionDate))}</td>`);
                row.append(`<td>${transaction.note || ''}</td>`);
                row.append(`<td>${transaction.createdBy}</td>`);

                tbody.append(row);
            });
        } else {
            // Hiển thị thông báo không có giao dịch
            $('#noTransactions').removeClass('d-none');
        }
    }

    // Function lọc lịch sử giao dịch theo loại
    function filterTransactionHistory(filterType) {
        if (!currentTransactionHistory) return;

        let filteredTransactions;

        if (filterType === 'all') {
            filteredTransactions = currentTransactionHistory;
        } else {
            filteredTransactions = currentTransactionHistory.filter(transaction =>
                transaction.transactionType.includes(filterType)
            );
        }

        displayTransactionHistory(filteredTransactions);
    }

    // Xử lý sự kiện khi click vào nút lọc
    $(document).on('click', '.btn-group[data-filter] .btn', function() {
        const filterType = $(this).data('filter');

        // Cập nhật trạng thái active của các nút
        $(this).siblings().removeClass('active');
        $(this).addClass('active');

        // Lọc dữ liệu
        filterTransactionHistory(filterType);
    });

    // Function xuất lịch sử giao dịch ra Excel
    function exportTransactionHistoryToExcel() {
        if (!currentTransactionHistory || currentTransactionHistory.length === 0) {
            Swal.fire(
                                        'Cảnh báo!',
                                        'Không có dữ liệu để xuất',
                                        'warning'
                                    );
            return;
        }

        // Trong thực tế, bạn sẽ gọi API để xuất Excel
        $.ajax({
            url: systemURL + "StockLevel/api/" + currentStockId + "/export",
            type: "GET",
            xhrFields: {
                responseType: 'blob'
            },
            success: function(blob) {
                // Tạo URL cho blob và tải xuống
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = `lich-su-giao-dich-${currentBatchNumber}.xlsx`;
                document.body.appendChild(a);
                a.click();
                window.URL.revokeObjectURL(url);

                Swal.fire(
                    'Thành công!',
                    'Đã xuất file Excel thành công',
                    'success'
                );
            },
            error: function(error) {
                Swal.fire(
                    'Lỗi!',
                    'Có lỗi xảy ra, vui lòng thử lại sau',
                    'error'
                );
            }
        });
    }

    // Xử lý sự kiện khi click vào nút xuất Excel
    $(document).on('click', '#exportTransactionHistory', function() {
        exportTransactionHistoryToExcel();
    });

    // Function định dạng số
    function formatNumberSt(number) {
        return new Intl.NumberFormat('vi-VN').format(number);
    }

    // Function định dạng ngày tháng (chỉ ngày)
    function formatDate(date) {
        return new Intl.DateTimeFormat('vi-VN', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        }).format(date);
    }

    // Function định dạng ngày tháng (có giờ)
    function formatDateTimeSt(date) {
        return new Intl.DateTimeFormat('vi-VN', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        }).format(date);
    }
</script>

<script>
    let currentIngredientId = null;
    let currentIngredientData = null;
    let currentStockBatches = [];

    async function getStockBatches(warehouseId, ingredientId) {
        $.ajax({
        url: systemURL + `StockLevel/api/GetStockLevelsByIngredient?warehouseId=${warehouseId}&ingredientId=${ingredientId}`,
        type: "GET",
        contentType: "application/json",
        success: function(responseData) {
            if (responseData.status == 200 && responseData.message === "SUCCESS" && responseData.data){
                const data = responseData.data;
                // Lưu danh sách lô hàng
                currentStockBatches = data;

                // Hiển thị danh sách lô hàng
                displayStockBatches(data);
            }
        },
        error: function(error) {
            console.error("Lỗi khi lấy danh sách lô hàng:", error);

            // Hiển thị thông báo không có lô hàng
            const noStockHtml = `
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                        <p class="text-muted">Không có lô hàng nào hoặc đã xảy ra lỗi khi tải dữ liệu</p>
                        <button class="btn btn-sm btn-primary mt-3" onclick="getStockBatches(${ingredientId})">
                            <i class="fas fa-sync-alt me-1"></i> Thử lại
                        </button>
                    </div>
                </div>
            `;

            // Thêm vào sau tiêu đề "Danh sách lô hàng"
            $('#stockBatchList h6.mb-3').after(noStockHtml);

            Swal.fire(
                                            'Lỗi!',
                                            'Không thể tải danh sách lô hàng. Vui lòng thử lại sau.',
                                            'error'
                                        );
        }
    });
    }
        // Function hiển thị danh sách lô hàng
    function displayStockBatches(stockBatches) {
        // Xóa danh sách lô hàng cũ
        $('#stockBatchList .stock-level-detail').remove();

        // Kiểm tra nếu không có lô hàng
        if (!stockBatches || stockBatches.length === 0) {
            const noStockHtml = `
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                        <p class="text-muted">Không có lô hàng nào cho nguyên liệu này</p>
                    </div>
                </div>
            `;

            // Thêm vào sau tiêu đề "Danh sách lô hàng"
            $('#stockBatchList h6.mb-3').after(noStockHtml);
            return;
        }

        // Hiển thị từng lô hàng
        stockBatches.forEach((batch, index) => {
            // Tính số ngày còn lại đến hạn sử dụng
            
            const daysRemaining = batch.daysUntilExpiration;

            // Xác định trạng thái hạn sử dụng
            let expiryStatus = 'good';
            let expiryText = `Còn hạn: ${daysRemaining} ngày`;

            if (daysRemaining < 0) {
                expiryStatus = 'expired';
                expiryText = `Đã hết hạn: ${Math.abs(daysRemaining)} ngày`;
            } else if (daysRemaining < 30) {
                expiryStatus = 'warning';
                expiryText = `Sắp hết hạn: ${daysRemaining} ngày`;
            }

            // Tính thành tiền
            const totalPrice = (batch.quantity || 0) * (batch.unitPrice || 0);

            // Tạo HTML cho lô hàng
            const batchHtml = `
                <div class="stock-level-detail" data-batch-id="${batch.id}">
                    <div class="stock-level-header">
                        <h6 class="stock-level-title">Lô #${'SL-' + (index + 1).toString().padStart(3, '0')}</h6>
                        <span class="expiration-badge ${expiryStatus}">${expiryText}</span>
                    </div>
                    <div class="stock-level-info">
                        <div class="stock-level-info-item">
                            <div class="stock-level-info-label">Số lượng</div>
                            <div class="stock-level-info-value">${formatNumber(batch.quantity || 0)} ${batch?.unitName || 'Kg'}</div>
                        </div>
                        <div class="stock-level-info-item">
                            <div class="stock-level-info-label">Đơn giá</div>
                            <div class="stock-level-info-value">${formatCurrencyPrice(batch.unitPrice || 0)}</div>
                        </div>
                        <div class="stock-level-info-item">
                            <div class="stock-level-info-label">Thành tiền</div>
                            <div class="stock-level-info-value">${formatCurrencyPrice(totalPrice)}</div>
                        </div>
                        <div class="stock-level-info-item">
                            <div class="stock-level-info-label">Hạn sử dụng</div>
                            <div class="stock-level-info-value">${formatDate(new Date(batch.expirationDate))}</div>
                        </div>
                        <div class="stock-level-info-item">
                            <div class="stock-level-info-label">Ngày nhập</div>
                            <div class="stock-level-info-value">${formatDate(new Date(batch.createdTime))}</div>
                        </div>

                    </div>
                    <div class="stock-level-actions">
                        <button class="btn btn-sm btn-outline-primary" data-bs-toggle="collapse" data-bs-target="#adjustForm${batch.id}">
                            <i class="fas fa-sliders-h me-1"></i> Điều chỉnh
                        </button>
                        <button class="btn btn-sm btn-outline-secondary view-history d-none" data-stock-id="${batch.id}" data-batch-number="${'SL-' + (index + 1).toString().padStart(3, '0')}">
                            <i class="fas fa-history me-1"></i> Lịch sử
                        </button>
                    </div>

                    <!-- Adjustment Form (Collapsed by default) -->
                    <div class="collapse mt-3" id="adjustForm${batch.id}">
                        <div class="adjustment-form" data-ing-unit="${batch.unitName}" data-stock-id="${batch.id}">
                            <h6 class="mb-3">Điều chỉnh số lượng</h6>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Số lượng hiện tại</label>
                                        <input type="text" class="form-control current-quantity" value="${formatNumber(batch.quantity || 0)} ${batch?.unitName || 'Kg'}" readonly>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Số lượng mới</label>
                                        <input type="number" class="form-control new-quantity" value="${batch.quantity || 0}" min="0" step="0.01">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Lý do điều chỉnh</label>
                                        <select class="form-select adjustment-reason">
                                            <option value="">-- Chọn lý do --</option>
                                            <option value="correction">Điều chỉnh số lượng</option>
                                            <option value="damage">Hư hỏng</option>
                                            <option value="expired">Hết hạn</option>
                                            <option value="other">Khác</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Ghi chú</label>
                                <textarea class="form-control adjustment-note" rows="2" placeholder="Nhập ghi chú cho việc điều chỉnh"></textarea>
                            </div>
                            <div class="text-end">
                                <button class="btn btn-secondary btn-sm me-2" data-bs-toggle="collapse" data-bs-target="#adjustForm${batch.id}">Hủy</button>
                                <button class="btn btn-primary btn-sm save-adjustment">Lưu thay đổi</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;

            // Thêm vào sau tiêu đề "Danh sách lô hàng"
            $('#stockBatchList h6.mb-3').after(batchHtml);
        });

        // Thêm nút "Thêm lô hàng mới" nếu chưa có
        if ($('#stockBatchList .text-center.mt-4').length === 0) {
            const addNewBatchButton = `
                <div class="text-center mt-4">
                    <button class="btn btn-success" id="addNewBatchBtn">
                        <i class="fas fa-plus me-1"></i> Thêm lô hàng mới
                    </button>
                </div>
            `;

            // Thêm vào cuối danh sách lô hàng
            $('#stockBatchList .stock-level-detail:last').after(addNewBatchButton);
        }
    }

    // Xử lý sự kiện khi click vào nút "Lưu thay đổi" trong form điều chỉnh
    $(document).on('click', '.save-adjustment', function() {
        const formContainer = $(this).closest('.adjustment-form');
        const stockId = formContainer.data('stock-id');
        const unitNameBatch = formContainer.data('ing-unit');
        const currentQuantityText = formContainer.find('.current-quantity').val();
        const currentQuantity = parseFloat(currentQuantityText.replace(/[^\d.-]/g, ''));
        const newQuantity = parseFloat(formContainer.find('.new-quantity').val());
        const reason = formContainer.find('.adjustment-reason').val();
        const note = formContainer.find('.adjustment-note').val();

        // Validate input
        if (isNaN(newQuantity) || newQuantity < 0) {
            Swal.fire(
                                        'Lỗi!',
                                        'Số lượng mới không hợp lệ',
                                        'error'
                                    );
            return;
        }

        if (!reason) {
                Swal.fire(
                    'Lỗi!',
                    'Vui lòng chọn lý do điều chỉnh',
                    'error'
                );
            return;
        }

        // Tạo object dữ liệu để gửi đi
        const adjustData = {
            stockLevelId: stockId,
            newQuantity: newQuantity,
            adjustmentReason: reason,
            note: note
        };

        // Hiển thị loading
        const saveButton = $(this);
        saveButton.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Đang xử lý...');

        // Gọi API để điều chỉnh số lượng
        $.ajax({
            url: systemURL + "StockLevel/api/AdjustStockLevelQuantity",
            type: "POST",
            contentType: 'application/json',
                beforeSend: function (xhr) {
                        if (localStorage.token) {
                            xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                        }
                    },
            data: JSON.stringify(adjustData),
            success: function(responseData) {
                if (responseData.status == "200" && responseData.message === "SUCCESS") {
                    // Đóng form điều chỉnh
                    formContainer.closest('.collapse').collapse('hide');

                    // Cập nhật số lượng hiển thị trên UI
                    const stockLevelDetail = formContainer.closest('.stock-level-detail');
                    stockLevelDetail.find('.stock-level-info-item:first-child .stock-level-info-value').text(formatNumberSt(newQuantity) + ' ' + (currentIngredientData?.unitName || 'Kg'));

                    // Cập nhật thành tiền
                    const unitPriceText = stockLevelDetail.find('.stock-level-info-item:nth-child(2) .stock-level-info-value').text();
                    const unitPrice = parseFloat(unitPriceText.replace(/[^\d.-]/g, '')) / 1000;
                    const totalPrice = newQuantity * unitPrice;
                    stockLevelDetail.find('.stock-level-info-item:nth-child(3) .stock-level-info-value').text(formatCurrencyPrice(totalPrice));

                    // Cập nhật tổng số lượng
                    updateTotalQuantity(stockId, newQuantity - currentQuantity);

                    // Hiển thị thông báo thành công
                    Swal.fire(
                                'Thành công!',
                                'Điều chỉnh số lượng thành công',
                                'success'
                            );

                    // Reset form
                    formContainer.find('.new-quantity').val(newQuantity);
                    formContainer.find('.adjustment-reason').val('');
                    formContainer.find('.adjustment-note').val('');

                    // Cập nhật giá trị hiện tại
                    formContainer.find('.current-quantity').val(formatNumber(newQuantity) + ' ' + (unitNameBatch || 'Kg'));
                } else {
                    Swal.fire(
                                'Lỗi!',
                                'Không thể điều chỉnh số lượng',
                                'error'
                            );
                }

                // Bỏ loading
                saveButton.prop('disabled', false).html('Lưu thay đổi');
            },
            error: function(error) {

                // Hiển thị thông báo lỗi
                if (error.responseJSON && error.responseJSON.message) {
                    Swal.fire(
                                'Lỗi!',
                                `${error.responseJSON.message}`,
                                'error'
                            );
                } else {
                    Swal.fire(
                        'Lỗi!',
                        'Không thể điều chỉnh số lượng. Vui lòng thử lại sau.',
                        'error'
                    );
                }

                // Bỏ loading
                saveButton.prop('disabled', false).html('Lưu thay đổi');
            }
        });
    });

    function updateTotalQuantity(stockId, quantityChange) {
        // Tìm lô hàng trong danh sách hiện tại
        const batchIndex = currentStockBatches.findIndex(batch => batch.id === stockId);

        if (batchIndex !== -1) {
            // Cập nhật số lượng trong danh sách
            currentStockBatches[batchIndex].quantity += quantityChange;

            // Tính lại tổng số lượng
            displayTotalQuantity(currentStockBatches);
        }
    }

    function displayTotalQuantity(stockBatches) {
        // Tính tổng số lượng
        let totalQuantity = 0;
        if (stockBatches && stockBatches.length > 0) {
            totalQuantity = stockBatches.reduce((sum, batch) => sum + (batch.quantity || 0), 0);
        }

        // Cập nhật hiển thị
        $('.ms-auto h4').text(formatNumber(totalQuantity) + ' ' + (currentIngredientData?.unitName || 'Kg'));
        $('.ms-auto .text-muted').text('Tổng số lượng');
    }
</script>

<script>
    $(document).on('click', '#addNewBatchBtn', function() {
    // Hiển thị modal thêm lô hàng mới
    showAddNewBatchModal();
});

    function showAddNewBatchModal() {
        // Kiểm tra nếu modal đã tồn tại thì xóa đi
        $('#addNewBatchModal').remove();

        // Tạo HTML cho modal
        const modalHtml = `
            <div class="modal fade" id="addNewBatchModal" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">
                                <i class="fas fa-plus me-2"></i>Thêm lô hàng mới
                            </h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <form id="addNewBatchForm">
                                <div class="mb-3 d-none">
                                    <label class="form-label">Mã lô hàng</label>
                                    <input type="text" class="form-control" id="newBatchCode" placeholder="Nhập mã lô hàng">
                                    <div class="form-text">Để trống để hệ thống tự sinh mã</div>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Số lượng <span class="text-danger">*</span></label>
                                    <input type="number" class="form-control" id="newBatchQuantity" placeholder="Nhập số lượng" required min="0" step="1">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Đơn giá <span class="text-danger">*</span></label>
                                    <input type="number" class="form-control" id="newBatchUnitPrice" placeholder="Nhập đơn giá" required min="0" step="1000">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Hạn sử dụng <span class="text-danger">*</span></label>
                                    <input type="date" class="form-control" id="newBatchExpiryDate" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Mã đơn hàng</label>
                                    <input type="text" class="form-control" id="newBatchPurchaseOrder" placeholder="Nhập mã đơn hàng">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Ghi chú</label>
                                    <textarea class="form-control" id="newBatchNote" rows="2" placeholder="Nhập ghi chú"></textarea>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                            <button type="button" class="btn btn-primary" id="saveNewBatchBtn">
                                <i class="fas fa-save me-1"></i> Lưu lô hàng
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        // Thêm modal vào body
        $('body').append(modalHtml);

        // Thiết lập giá trị mặc định cho ngày hết hạn (1 năm sau)
        const oneYearLater = new Date();
        oneYearLater.setFullYear(oneYearLater.getFullYear() + 1);
        $('#newBatchExpiryDate').val(oneYearLater.toISOString().split('T')[0]);

        // Hiển thị modal
        const addNewBatchModal = new bootstrap.Modal(document.getElementById('addNewBatchModal'));
        addNewBatchModal.show();

        // Xử lý sự kiện khi click vào nút "Lưu lô hàng"
        $('#saveNewBatchBtn').on('click', function() {
            saveNewBatch();
        });

            function saveNewBatch() {
        // Validate form
        if (!$('#newBatchQuantity').val() || !$('#newBatchUnitPrice').val() || !$('#newBatchExpiryDate').val()) {
            showToast('error', 'Lỗi', 'Vui lòng điền đầy đủ thông tin bắt buộc');
            return;
        }

        // Lấy dữ liệu từ form
        const newBatchData = {
            ingredientId: currentIngredientData.ingredientId,
            quantity: parseFloat($('#newBatchQuantity').val()),
            unitPrice: parseFloat($('#newBatchUnitPrice').val()),
                expirationDate: $('#newBatchExpiryDate').val(),
                createdTime: formatDatetimeUpdate(moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY HH:mm:ss')),
                active: true,
                warehouseId: currentIngredientData.warehouseId,
                        lastUpdatedTime: formatDatetimeUpdate(moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY HH:mm:ss'))
        };

        // Hiển thị loading
        $('#saveNewBatchBtn').prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Đang xử lý...');

        // Gọi API để thêm lô hàng mới
        $.ajax({
            url: systemURL + "StockLevel/api/add",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(newBatchData),
                success: function(responseData) {
                    if (responseData.status == 201 && responseData.message === "CREATED") {
                    // Đóng modal
                    $('#addNewBatchModal').modal('hide');

                    // Hiển thị thông báo thành công
                        showToast('success', 'Thành công', responseData.message || 'Thêm lô hàng mới thành công');

                    // Cập nhật lại danh sách lô hàng
                    getStockBatches(currentIngredientData.warehouseId, currentIngredientData.ingredientId);
                } else {
                        showToast('error', 'Lỗi', responseData.message || 'Không thể thêm lô hàng mới');

                    // Bỏ loading
                    $('#saveNewBatchBtn').prop('disabled', false).html('<i class="fas fa-save me-1"></i> Lưu lô hàng');
                }
            },
            error: function(error) {
                console.error("Lỗi khi thêm lô hàng mới:", error);

                // Hiển thị thông báo lỗi
                if (error.responseJSON && error.responseJSON.message) {
                    showToast('error', 'Lỗi', error.responseJSON.message);
                } else {
                    showToast('error', 'Lỗi', 'Không thể thêm lô hàng mới. Vui lòng thử lại sau.');
                }

                // Bỏ loading
                $('#saveNewBatchBtn').prop('disabled', false).html('<i class="fas fa-save me-1"></i> Lưu lô hàng');
            }
        });
    }
    }

           function showToast(type, title, message) {
        Swal.fire({
            toast: true,
            position: 'top-end',
            icon: type,        // 'success', 'error', 'warning', 'info', 'question'
            title: title,
            text: message,
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true
        });
    }


</script>

<script>
    const API_URL = systemURL + "StockTransaction/api/";
    const STATUS_TYPES = {
        draft: "Nháp",
        pending: "Chờ xử lý",
        completed: "Hoàn thành",
        canceled: "Đã hủy"
    };
    const TRANSACTION_TYPES = {
        IMPORT: "Nhập kho",
        EXPORT: "Xuất kho",
        INVENTORY: "Kiểm kê"
    };

     // Các bảng dữ liệu
    let transactionsTable;
    let draftTransactionsTable;
    let pendingTransactionsTable;
    let completedTransactionsTable;
    let canceledTransactionsTable;

    // Dữ liệu cache
    let warehouseList = [];
    let ingredientList = [];
    let currentTransaction = null;
    let currentItems = [];

    let userData = localStorage.getItem('profile');
    let user = JSON.parse(userData);

    let currentAccountId = user.id;

    $(document).ready(function() {
        loadIngredients();
        // Setup sự kiện cho modal cập nhật trạng thái
        setupUpdateStatusModal();

        // Setup sự kiện cho modal hủy phiếu
        setupCancelTransactionModal();

        // Setup sự kiện cho modal xóa phiếu
        setupDeleteTransactionModal();
    });

    $('[data-bs-target="#stockOutModal"]').on('click', function () {
        resetExportForm()
    });

    // Gắn sự kiện click vào nút Nhập kho
    $('[data-bs-target="#stockInModal"]').on('click', function () {
        // Reset form
        resetImportForm();
    });

    function loadIngredients() {
            setTimeout(function () {
                $.ajax({
                    url: systemURL + `ingredient/api/listDto`,
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        const ingredients = response.data || [];

                        let options = '<option value="">-- Chọn nguyên liệu --</option>';

                        ingredients.forEach(function(ingredient) {
                            options += `<option value="${ingredient.id}" data-avgprice="${ingredient.averagePrice}">${ingredient.ingredientName} - ${formatCurrencyPrice(ingredient.averagePrice)} (${ingredient.unitName})</option>`;
                        });

                        $('#ingredient').html(options).trigger('change');
                    },
                    error: function (xhr, status, error) {
                        console.error('Không thể tải danh sách nhà cung cấp:', error);
                    }
                });
            }, 300);
        }
    $(document).on('change', '#ingredient', function () {
        const selectedOption = $(this).find('option:selected');
        const value = parseInt(selectedOption.val());
        const avgPrice = selectedOption.data('avgprice');
        const roundedPrice = Math.round(avgPrice / 1000) * 1000;

        if (value > 0 && avgPrice != null) {
            $('#unitPrice').val(roundedPrice);
        } else {
            $('#unitPrice').val('');
        }
    });


    function getIngredientStockSummary() {
        setTimeout(function () {
                $.ajax({
                    url: systemURL + `stockLevel/api/getIngredientStockSummary?warehouseId=${warehouseTabId}`,
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        const ingredients = response.data || [];

                        let options = '<option value="">-- Chọn nguyên liệu --</option>';

                        ingredients.forEach(function(ingredient) {
                            options += `<option value="${ingredient.ingredientId}" data-avgprice="${ingredient.averagePrice}">${ingredient.ingredientName} - còn ${ingredient.totalQuantity}(${ingredient.unitName})</option>`;
                        });

                        $('#outIngredient').html(options).trigger('change');
                    },
                    error: function (xhr, status, error) {
                        console.error('Không thể tải danh sách nhà cung cấp:', error);
                    }
                });
            }, 300);
    }

    $(document).on('change', '#outIngredient', function () {
        const selectedOption = $(this).find('option:selected');
        const value = parseInt(selectedOption.val());
        const avgPrice = selectedOption.data('avgprice');
        const roundedPrice = Math.round(avgPrice / 1000) * 1000;

        if (value > 0 && roundedPrice != null) {
            $('#outUnitPrice').val(roundedPrice);
        } else {
            $('#outUnitPrice').val('');
        }
    });

        $('#search-input-transaction').on("input",function () {
            transactionsTable.search($(this).val()).draw();
    });

    function loadAllTransaction() {
        transactionsTable = $('#transactionsTableactionWarehouse').DataTable({
            processing: true,
            serverSide: true,
            paging: true,
                    searching: { regex: true },
                    order: [2, 1],
                    "oLanguage": {
                        "sUrl": "/js/Vietnamese.json"
                    },
            ajax: {
                        url: systemURL + "stockTransaction/api/list-server-side-warehouse",
                        type: "POST",
                        contentType: "application/json",

                        dataType: "json",
                        // beforeSend: function(xhr) {
                        // 	xhr.setRequestHeader('Authorization', 'Bearer ' + localStorage.token);
                        // },
                        data: function (d) {
                            d.searchAll = $("#search-input-transaction").val();
                            d.warehouseId = warehouseTabId;
                            return JSON.stringify(d);
                        }
                    },
            columns: [
                { data: 'stockTransactionCode' },
                {
                    data: 'transactionType',
                    render: function(data) {
                        switch(data) {
                            case 'IMPORT':
                                return '<span class="badge bg-success">Nhập kho</span>';
                            case 'EXPORT':
                                return '<span class="badge bg-danger">Xuất kho</span>';
                            case 'ADJUSTMENT':
                                return '<span class="badge bg-warning">Điều chỉnh</span>';
                                case 'ADJUSTMENT_IN':
                                return '<span class="badge bg-warning ">Điều chỉnh</span>';
                                case 'ADJUSTMENT_OUT':
                                return '<span class="badge bg-warning">Điều chỉnh</span>';
                            default:
                                return data;
                        }
                    }
                },
                {
                    data: 'createdTime',
                    render: function(data) {
                        return moment(data).format('DD/MM/YYYY HH:mm');
                    }
                },
                {
                    data: 'totalMoney',
                    render: function(data) {
                        return formatCurrencyPrice(data);
                    },
                    className: 'text-end'
                },
                {
                    data: 'status',
                    render: function(data) {
                        return renderStatus(data);
                    }
                },
                { data: 'accountName' },
                { data: 'note' },
                {
                    data: 'id',
                    render: function(data, type, row) {
                        return renderActions(data, row.status);
                    },
                    orderable: false,
                    className: 'text-center'
                }
            ],
            language: {
                "sUrl": "/js/Vietnamese.json"
            }
        });
    }

    function renderStatus(status) {
            let badgeClass = '';
            let statusText = '';
            let icon = '';

            switch (status.toLowerCase()) {
                case 'draft':
                    badgeClass = 'bg-info';
                    statusText = 'Nháp';
                    icon = 'fa-file';
                    break;
                case 'pending':
                    badgeClass = 'bg-primary';
                    statusText = 'Đã gửi';
                    icon = 'fa-paper-plane';
                    break;
                case 'approved':
                    badgeClass = 'bg-info';
                    statusText = 'Đã xác nhận';
                    icon = 'fa-check';
                    break;
                case 'completed':
                    badgeClass = 'bg-success';
                    statusText = 'Hoàn thành';
                    icon = 'fa-truck-loading';
                    break;
                case 'canceled':
                    badgeClass = 'bg-danger';
                    statusText = 'Đã hủy';
                    icon = 'fa-times';
                    break;
                default:
                    badgeClass = 'bg-secondary';
                    statusText = status;
                    icon = 'fa-question';
            }

            return `<span class="badge ${badgeClass}"><i class="fas ${icon} me-1"></i>${statusText}</span>`;
        }

        function getStatusText(status) {
            switch (status) {
                case 'draft': return 'Nháp';
                case 'pending': return 'Đã gửi';
                case 'approved': return 'Đã xác nhận';
                case 'completed': return 'Đã nhận hàng';
                case 'canceled': return 'Đã hủy';
                default: return status;
            }
        }

        function renderActions(id, status) {
            let actions = `
                <button type="button" class="btn btn-sm btn-info me-1 btn-view" data-id="${id}" title="Xem chi tiết">
                    <i class="fas fa-eye"></i>
                </button>
            `;

            if (status === 'draft') {
                actions += `
                    <button type="button" class="btn btn-sm btn-primary me-1 btn-edit" data-id="${id}" title="Chỉnh sửa">
                        <i class="fas fa-edit"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-danger btn-delete" data-id="${id}" title="Xóa">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                `;
            }

            return actions;
        }

        $(document).on('click', '.btn-view', function() {
            const id = $(this).data('id');
            viewTransaction(id);
        });

        $(document).on('click', '.btn-edit', function() {
            const id = $(this).data('id');
            editTransaction(id);
        });

        function viewTransaction(id) {
            // Show loading
            $('#loadingSpinner').removeClass('d-none');

            // Load transaction details
            $.ajax({
                url: API_URL + `DetailForReview/${id}`,
                type: "GET",
                success: function(response) {
                    $('#loadingSpinner').addClass('d-none');

                    if (response && response.status == 200) {
                        currentTransaction = response.data[0];

                        // Populate modal with transaction details
                        populateTransactionDetailModal(currentTransaction);

                        // Show modal
                        $('#transactionDetailModal').modal('show');
                    } else {
                        showToast('error', 'Lỗi', 'Không thể tải thông tin giao dịch');
                    }
                },
                error: function() {
                    $('#loadingSpinner').addClass('d-none');
                    showToast('error', 'Lỗi', 'Không thể tải thông tin giao dịch');
                }
            });
        }
    
        $('#saveDrafTransactionBtn').click(async function() {
            if ($('#itemsTable tbody tr').length === 0 || $('#itemsTable tbody tr td').attr('colspan')) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Vui lòng thêm ít nhất một nguyên liệu!'
                        });
                        return;
            }

                var obj = saveImportTrans('draft');
                await saveTransaction(obj);
                $('#stockInModal').modal('hide');
        });

        // Save and Send
        $('#saveTransactionBtn').click(async function() {
            if ($('#itemsTable tbody tr').length === 0 || $('#itemsTable tbody tr td').attr('colspan')) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Vui lòng thêm ít nhất một nguyên liệu!'
                    });
                    return;
            }

            var obj = saveImportTrans('pending');
            await saveTransaction(obj);
            $('#stockInModal').modal('hide');
        });

    // Save out transaction
                $('#saveOutDrafTransactionBtn').click(async function() {
                    if ($('#outItemsTable tbody tr').length === 0 || $('#outItemsTable tbody tr td').attr('colspan')) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Vui lòng thêm ít nhất một nguyên liệu!'
                        });
                        return;
                    }

                     var obj = saveExportTrans('draft');
                     await saveTransaction(obj);

                    $('#stockOutModal').modal('hide');
                });
        $('#saveOutTransactionBtn').click(async function() {
                    if ($('#outItemsTable tbody tr').length === 0 || $('#outItemsTable tbody tr td').attr('colspan')) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Vui lòng thêm ít nhất một nguyên liệu!'
                        });
                        return;
                    }

                     var obj = saveExportTrans('pending');
                     await saveTransaction(obj);

                    $('#stockOutModal').modal('hide');
                });

    function saveImportTrans(statusText) {
        const transactionType = 'IMPORT';
        const warehouseId = warehouseTabId;
        const status = statusText ? statusText : 'draf';
        const totalPrice = $('#totalAmount').text().replace(/[^\d]/g, '') || 0;
        const newDate = formatDatetimeUpdate(moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY HH:mm:ss'));

        const items = [];
        $('#itemsTable tbody tr').each(function() {
                const itemId = $(this).data('item-id');
                    const ingredientId = $(this).data('ingredient-id');
                    const quantity = parseInt($(this).find('td:eq(3)').text());
                    const unitPrice = parseFloat($(this).find('td:eq(5)').text().replace(/[^\d]/g, ''));  
                    const exDate = $(this).find('td:eq(4)').text();
                    const expirationDate = exDate ? formatDatetimeUpdate(moment(exDate, 'YYYY-MM-DD').format('DD/MM/YYYY HH:mm:ss')) : null;
                    const newBatch = $(this).data('newbatch');

                    items.push({
                        id: itemId ? itemId : 0,
                        ingredientId: ingredientId,
                        stockTransactionId: 0,
                        quantity: quantity,
                        unitPrice: unitPrice,
                        createNewBatch: newBatch,
                        expirationDate: expirationDate,
                        createdTime: newDate,
                        active: true
                    });
            });

        const transaction = {
            id: parseInt($('#transactionImportId').val()) || 0,
            transactionType: transactionType,
            warehouseId: parseInt(warehouseId),
            status: status,
            note: $('#transactionNote').val(),
            totalMoney: totalPrice,
            accountId: currentAccountId,          
            createdTime: newDate,
            active: true,
            transactionDate: newDate,
            details: items
        };
        return transaction;
    }

    function saveExportTrans(statusText){
        const transactionType = 'EXPORT';
        const warehouseId = warehouseTabId;
        const status = statusText ? statusText : 'draf';
        const totalPrice = $('#outTotalAmount').text().replace(/[^\d]/g, '');
        const newDate = formatDatetimeUpdate(moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY HH:mm:ss'));

        const items = [];
        $('#outItemsTable tbody tr').each(function() {
                const itemId = $(this).data('item-id');
                    const ingredientId = $(this).data('ingredient-id');
                    const quantity = parseInt($(this).find('td:eq(3)').text());
                    const unitPrice = parseFloat($(this).find('td:eq(4)').text().replace(/[^\d]/g, ''));

                    items.push({
                        id: itemId ? itemId : 0,
                        ingredientId: ingredientId,
                        stockTransactionId: 0,
                        quantity: quantity,
                        unitPrice: unitPrice,
                        createNewBatch: false,
                        expirationDate: newDate,
                        createdTime: newDate,
                        active: true
                    });
            });

        const transaction = {
            id: parseInt($('#transactionExportId').val()) || 0,
            transactionType: transactionType,
            warehouseId: parseInt(warehouseId),
            status: status,
            note: $('#outTransactionNote').val(),
            totalMoney: totalPrice,
            accountId: currentAccountId,
            createdTime: newDate,
            active: true,
            transactionDate: newDate,
            details: items
        };
        return transaction;
    }

    async function saveTransaction(transaction) {
        $('#loadingSpinner').removeClass('d-none');

        // Send API request
        $.ajax({
            url: API_URL + "AddOrUpdate",
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(transaction),
            success: function(response) {
                $('#loadingSpinner').addClass('d-none');

                if (response && response.status == 200) {
                    // Show success message
                    showToast('success', 'Thành công', 'Đã lưu giao dịch thành công!');

                    // Reload tables
                    reloadAllTables();
                } else {
                    showToast('error', 'Lỗi', response?.message || 'Có lỗi xảy ra khi lưu giao dịch');
                }
            },
            error: function(xhr) {
                $('#loadingSpinner').addClass('d-none');
                showToast('error', 'Lỗi', xhr.responseJSON?.message || 'Có lỗi xảy ra khi lưu giao dịch');
            }
        });
    }

    function reloadAllTables() {
        transactionsTable.ajax.reload();
        stockTable.ajax.reload();
    }

    function populateTransactionDetailModal(transaction) {
        // Set transaction code in title
        $('#transactionCodeTitle').text(transaction.transactionCode);

        // Set icon based on transaction type
        let icon = '<i class="fas fa-exchange-alt"></i>';
        if (transaction.transactionType === 'IMPORT') {
            icon = '<i class="fas fa-file-import"></i>';
        } else if (transaction.transactionType === 'EXPORT') {
            icon = '<i class="fas fa-file-export"></i>';
        } else if (transaction.transactionType === 'INVENTORY') {
            icon = '<i class="fas fa-clipboard-check"></i>';
        }
        $('#transactionTypeIcon').html(icon);

        // Set status badge
        let badgeClass = '';
        if (transaction.status === 'draft') badgeClass = 'bg-info';
        else if (transaction.status === 'pending') badgeClass = 'bg-primary';
        else if (transaction.status === 'completed' || transaction.status === 'completed') badgeClass = 'bg-success';
        else if (transaction.status === 'canceled' || transaction.status === 'canceled' | transaction.status === 'canceled') badgeClass = 'bg-danger';

        $('#transactionStatusBadge').attr('class', 'badge ' + badgeClass).text(STATUS_TYPES[transaction.status] || transaction.status);

        // Set transaction details
        $('#detailTransactionCode').text(transaction.transactionCode);
        $('#detailTransactionType').text(TRANSACTION_TYPES[transaction.transactionType] || transaction.transactionType);
        $('#detailTransactionStatus').text(STATUS_TYPES[transaction.status] || transaction.status);
        $('#detailWarehouse').text(transaction.warehouseName);
        $('#detailCreatedDate').text(moment(transaction.createdDate).format('DD/MM/YYYY HH:mm'));
        $('#detailCreatedBy').text(transaction.createdBy);
        $('#detailTotalAmount').text(formatCurrencyPrice(transaction.totalMoney));
        $('#detailNote').text(transaction.note || '');

        // Populate items table
        populateDetailItemsTable(transaction.details);

        // Populate status timeline
        populateStatusTimeline(transaction);

        // Show/hide inventory detail section
        if (transaction.transactionType === 'INVENTORY') {
            $('#inventoryDetailSection').removeClass('d-none');
            populateInventoryDetails(transaction.details);
        } else {
            $('#inventoryDetailSection').addClass('d-none');
        }

        // Populate actions buttons
        populateTransactionActions(transaction);
    }

    function populateDetailItemsTable(details) {
        const tbody = $('#detailItemsBody');
        tbody.empty();

        let totalAmount = 0;

        if (details && details.length > 0) {
            details.forEach((detail, index) => {
                const totalPrice = detail.quantity * detail.unitPrice;
                totalAmount += totalPrice;

                tbody.append(`
                    <tr>
                        <td>${index + 1}</td>
                        <td>${detail.ingredientCode || ''}</td>
                        <td>${detail.ingredientName}</td>
                        <td>${detail.unit || ''}</td>
                        <td class="text-end">${detail.quantity}</td>
                        <td class="text-end">${formatCurrencyPrice(detail.unitPrice)}</td>
                        <td class="text-end">${formatCurrencyPrice(totalPrice)}</td>
                        <td>${detail.expirationDate ? moment(detail.expirationDate).format('DD/MM/YYYY') : ''}</td>
                    </tr>
                `);
            });
        } else {
            tbody.append(`
                <tr>
                    <td colspan="8" class="text-center py-3 text-muted">Không có chi tiết giao dịch</td>
                </tr>
            `);
        }

        // Set grand total
        $('#detailGrandTotal').text(formatCurrencyPrice(totalAmount));
    }

    function populateStatusTimeline(transaction) {
        const timeline = $('#statusTimeline');
        timeline.empty();

        // Add created status
        timeline.append(`
            <div class="timeline-item">
                <div class="timeline-marker draft">
                    <i class="fas fa-pencil-alt fa-xs"></i>
                </div>
                <div class="timeline-content">
                    <div class="timeline-date">${moment(transaction.createdDate).format('DD/MM/YYYY HH:mm')}</div>
                    <div class="timeline-title">Tạo phiếu</div>
                    <div class="timeline-text">Phiếu được tạo bởi ${transaction.createdBy}</div>
                </div>
            </div>
        `);

        // Parse and add status history
        if (transaction.statusHistory) {
            try {
                const history = JSON.parse(transaction.statusHistory);

                if (Array.isArray(history)) {
                    // Sort by date
                    history.sort((a, b) => new Date(a.Date) - new Date(b.Date));

                    history.forEach(item => {
                        let markerClass = '';
                        let iconClass = '';

                        if (item.Status === 'pending') {
                            markerClass = 'pending';
                            iconClass = 'clock';
                        } else if (item.Status === 'completed') {
                            markerClass = 'completed';
                            iconClass = 'check';
                        } else if (item.Status === 'canceled') {
                            markerClass = 'canceled';
                            iconClass = 'times';
                        }

                        timeline.append(`
                            <div class="timeline-item">
                                <div class="timeline-marker ${markerClass}">
                                    <i class="fas fa-${iconClass} fa-xs"></i>
                                </div>
                                <div class="timeline-content">
                                    <div class="timeline-date">${moment(item.Date).format('DD/MM/YYYY HH:mm')}</div>
                                    <div class="timeline-title">Cập nhật trạng thái: ${STATUS_TYPES[item.Status] || item.Status}</div>
                                    ${item.Reason ? `<div class="timeline-text">Lý do: ${item.Reason}</div>` : ''}
                                </div>
                            </div>
                        `);
                    });
                }
            } catch (e) {
                console.error("Error parsing status history:", e);
            }
        }
    }

    function populateTransactionActions(transaction) {
        const actionsDiv = $('#transactionActions');
        actionsDiv.empty();

        if (transaction.status === 'draft') {
            actionsDiv.append(`
                <button class="btn btn-primary w-100 mb-2 edit-transaction" data-id="${transaction.id}">
                    <i class="fas fa-edit me-1"></i> Chỉnh sửa phiếu
                </button>
                <button class="btn btn-success w-100 mb-2 update-to-pending" data-id="${transaction.id}">
                    <i class="fas fa-paper-plane me-1"></i> Gửi phê duyệt
                </button>
                <button class="btn btn-info w-100 mb-2 update-to-completed" data-id="${transaction.id}">
                    <i class="fas fa-check-circle me-1"></i> Hoàn thành ngay
                </button>
                <button class="btn btn-danger w-100 mb-2 cancel-transaction" data-id="${transaction.id}">
                    <i class="fas fa-ban me-1"></i> Hủy phiếu
                </button>
                <button class="btn btn-outline-danger w-100 delete-transaction" data-id="${transaction.id}">
                    <i class="fas fa-trash-alt me-1"></i> Xóa phiếu
                </button>
            `);
        } else if (transaction.status === 'pending') {
            actionsDiv.append(`
                <button class="btn btn-success w-100 mb-2 update-to-completed" data-id="${transaction.id}">
                    <i class="fas fa-check-circle me-1"></i> Phê duyệt và hoàn thành
                </button>
                <button class="btn btn-danger w-100 cancel-transaction" data-id="${transaction.id}">
                    <i class="fas fa-ban me-1"></i> Từ chối phê duyệt
                </button>
            `);
        } else {
            actionsDiv.append(`
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Phiếu ở trạng thái ${STATUS_TYPES[transaction.status] || transaction.status} không thể thực hiện thao tác thêm.
                </div>
            `);
        }

        // Add event handlers
        actionsDiv.find('.edit-transaction').on('click', function() {
            const id = $(this).data('id');
            $('#transactionDetailModal').modal('hide');
            editTransaction(id);
        });

        actionsDiv.find('.update-to-pending').on('click', function() {
            const id = $(this).data('id');
            $('#transactionDetailModal').modal('hide');
            showUpdateStatusModal(id, 'pending');
        });

        actionsDiv.find('.update-to-completed').on('click', function() {
            const id = $(this).data('id');
            $('#transactionDetailModal').modal('hide');
            showUpdateStatusModal(id, 'completed');
        });

        actionsDiv.find('.cancel-transaction').on('click', function() {
            const id = $(this).data('id');
            $('#transactionDetailModal').modal('hide');
            showCancelTransactionModal(id);
        });

        actionsDiv.find('.delete-transaction').on('click', function() {
            const id = $(this).data('id');
            $('#transactionDetailModal').modal('hide');
            showDeleteTransactionModal(id);
        });
    }

    function editTransaction(id) {
            // Show loading
            $('#loadingSpinner').removeClass('d-none');

            // Load transaction details
            $.ajax({
                url: API_URL + `DetailForReview/${id}`,
                type: "GET",
                success: function(response) {
                    $('#loadingSpinner').addClass('d-none');

                    if (response && response.status == 200) {
                        const transaction = response.data[0];

                        // Set title
                        let title = '';
                        if (transaction.transactionType == 'IMPORT'){
                            editImportTrans(transaction);
                        }
                        else if (transaction.transactionType == 'EXPORT'){
                            editExportTrans(transaction);
                        }
                        else if (transaction.transactionType == 'INVENTORY') title = 'Chỉnh sửa phiếu kiểm kê';

                        
                    } else {
                        showToast('error', 'Lỗi', 'Không thể tải thông tin giao dịch');
                    }
                },
                error: function() {
                    $('#loadingSpinner').addClass('d-none');
                    showToast('error', 'Lỗi', 'Không thể tải thông tin giao dịch');
                }
            });
        }

        function editImportTrans(transaction) {
            resetImportForm();
             $('#transactionImportId').val(transaction.id);
             $('#transactionCode').val(transaction.transactionCode);
             $('#transactionNote').val(transaction.note || '');
             $('#totalAmount').text(formatCurrencyPrice(transaction.totalMoney || 0));

             const formattedDate = transaction.transactionDate
                                        ? moment(transaction.transactionDate).format('YYYY-MM-DD')
                                        : '';

             $('#transactionDate').val(formattedDate);

             if (transaction.details && transaction.details.length > 0) {
                        transaction.details.forEach(function(item) {
                            addItemImportForm(item);
                        });
             }

             $('#stockInModal h5').text('Chỉnh sửa phiếu nhập kho')

             $('#stockInModal').modal('show');
        }

        function addItemImportForm(objDetail) {
             $('#itemsTable tbody').empty();
                const rowCount = $('#itemsTable tbody tr').length;
                const newRow = `
                    <tr data-newbatch='${objDetail.createNewBatch}' data-ingredient-id="${objDetail.ingredientId}" data-item-id="${objDetail.id}">
                        <td>${rowCount + 1}</td>
                        <td>${objDetail.ingredientName}</td>
                        <td>${objDetail.unit}</td>
                        <td class="text-end">${objDetail.quantity}</td>
                        <td>${objDetail.expirationDate}</td>
                        <td class="text-end">${formatCurrencyPrice(objDetail.unitPrice)}</td>
                        <td class="text-end">${formatCurrencyPrice(objDetail.unitPrice * objDetail.quantity)}</td>
                        <td class="text-end">
                            <button type="button" class="btn btn-sm btn-icon btn-danger remove-item">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                `;

                $('#itemsTable tbody').append(newRow);

                // Update total amount
                updateTotalAmount();
        }

        function editExportTrans(transaction) {
            resetExportForm();
            $('#transactionExportId').val(transaction.id);
             $('#outTransactionCode').val(transaction.transactionCode);
             $('#outTransactionNote').val(transaction.note || '');
             $('#outTotalAmount').text(formatCurrencyPrice(transaction.totalMoney || 0));

             const formattedDate = transaction.transactionDate
                                        ? moment(transaction.transactionDate).format('YYYY-MM-DD')
                                        : '';

             $('#outTransactionDate').val(formattedDate);

             if (transaction.details && transaction.details.length > 0) {
                        transaction.details.forEach(function(item) {
                            addItemExportForm(item);
                        });
             }

             $('#stockOutModal h5').text('Chỉnh sửa phiếu nhập kho')

             $('#stockOutModal').modal('show');
        }

        function addItemExportForm(objDetail) {
            $('#outItemsTable tbody').empty();
                const rowCount = $('#outItemsTable tbody tr').length;
                const newRow = `
                    <tr data-ingredient-id="${objDetail.ingredientId}" data-item-id="${objDetail.id}">
                        <td>${rowCount + 1}</td>
                        <td>${objDetail.ingredientName}</td>
                        <td>${objDetail.unit || ''}</td>
                        <td class="text-end">${objDetail.quantity}</td>
                        <td class="text-end">${formatCurrencyPrice(objDetail.unitPrice)}</td>
                        <td class="text-end">${formatCurrencyPrice(objDetail.quantity * objDetail.unitPrice)}</td>
                        <td>${objDetail.note || ''}</td>
                        <td class="text-end">
                            <button type="button" class="btn btn-sm btn-icon btn-danger remove-out-item">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>`;

                $('#outItemsTable tbody').append(newRow);

                // Update total amount
                updateOutTotalAmount();
        }

        // Thiết lập sự kiện cho modal hủy phiếu
    function setupCancelTransactionModal() {
        // Xử lý nút xác nhận hủy
        $('#confirmCancelBtn').on('click', function() {
            const transactionId = $('#cancelTransactionId').val();
            const cancelReason = $('#cancelReason').val();

            // Validate
            if (!cancelReason) {
                showToast('error', 'Lỗi', 'Vui lòng nhập lý do hủy phiếu');
                return;
            }

            // Show loading
            $('#loadingSpinner').removeClass('d-none');

            // Cancel transaction
            $.ajax({
                url: API_URL + "Cancel",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    transactionId: transactionId,
                    cancelReason: cancelReason,
                    canceledBy: currentAccountId
                }),
                success: function(response) {
                    $('#loadingSpinner').addClass('d-none');

                    if (response && response.status == 200) {
                        // Close modal
                        $('#cancelTransactionModal').modal('hide');

                        // Show success message
                        showToast('success', 'Thành công', 'Đã hủy phiếu thành công!');

                        // Reload tables
                        reloadAllTables();
                    } else {
                        showToast('error', 'Lỗi', response?.message || 'Có lỗi xảy ra khi hủy phiếu');
                    }
                },
                error: function(xhr) {
                    $('#loadingSpinner').addClass('d-none');
                    showToast('error', 'Lỗi', xhr.responseJSON?.message || 'Có lỗi xảy ra khi hủy phiếu');
                }
            });
        });
    }

    // Hiển thị modal hủy phiếu
    function showCancelTransactionModal(transactionId) {
        // Reset form
        $('#cancelTransactionId').val(transactionId);
        $('#cancelReason').val('');

        // Show modal
        $('#cancelTransactionModal').modal('show');
    }


     // Thiết lập sự kiện cho modal xóa phiếu
    function setupDeleteTransactionModal() {
        // Xử lý nút xác nhận xóa
        $('#confirmDeleteBtn').on('click', async function() {
            const transactionId = $('#deleteTransactionId').val();

            // Show loading
            $('#loadingSpinner').removeClass('d-none');

            let obj = await detailTransactionById(transactionId);

            // Delete transaction
            $.ajax({
                url: API_URL + "Delete",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(obj),
                success: function(response) {
                    $('#loadingSpinner').addClass('d-none');

                    if (response && response.status == 200) {
                        // Close modal
                        $('#deleteTransactionModal').modal('hide');

                        // Show success message
                        showToast('success', 'Thành công', 'Đã xóa phiếu thành công!');

                        // Reload tables
                        reloadAllTables();
                    } else {
                        showToast('error', 'Lỗi', response?.message || 'Có lỗi xảy ra khi xóa phiếu');
                    }
                },
                error: function(xhr) {
                    $('#loadingSpinner').addClass('d-none');
                    showToast('error', 'Lỗi', xhr.responseJSON?.message || 'Có lỗi xảy ra khi xóa phiếu');
                }
            });
        });
    }

    // Hiển thị modal xóa phiếu
    function showDeleteTransactionModal(transactionId) {
        // Reset form
        $('#deleteTransactionId').val(transactionId);

        // Show modal
        $('#deleteTransactionModal').modal('show');
    }

    function setupUpdateStatusModal() {

        // Xử lý nút lưu thay đổi
        $('#saveStatusBtn').on('click', function() {
            const transactionId = $('#statusTransactionId').val();
            const newStatus = $('#newStatus').val();
            const note = $('#statusNote').val();

            // Validate
            if (newStatus === 'CANCELED' && !note) {
                showToast('error', 'Lỗi', 'Vui lòng nhập lý do hủy phiếu');
                return;
            }

            // Show loading
            $('#loadingSpinner').removeClass('d-none');

            // Update status
            $.ajax({
                url: API_URL + "UpdateStatus",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    transactionId: transactionId,
                    newStatus: newStatus,
                    userId: currentAccountId,
                    note: note
                }),
                success: function(response) {
                    $('#loadingSpinner').addClass('d-none');

                    if (response && response.status == 200) {
                        // Close modal
                        $('#updateStatusModal').modal('hide');

                        // Show success message
                        showToast('success', 'Thành công', 'Đã cập nhật trạng thái thành công!');

                        // Reload tables
                        reloadAllTables();
                    } else {
                        showToast('error', 'Lỗi', response?.message || 'Có lỗi xảy ra khi cập nhật trạng thái');
                    }
                },
                error: function(xhr) {
                    $('#loadingSpinner').addClass('d-none');
                    showToast('error', 'Lỗi', xhr.responseJSON?.message || 'Có lỗi xảy ra khi cập nhật trạng thái');
                }
            });
        });
    }

    // Hiển thị modal cập nhật trạng thái
    function showUpdateStatusModal(transactionId, statusVal) {
        // Reset form
        $('#statusTransactionId').val(transactionId);
        $('#newStatus').val(statusVal);
        $('#statusNote').val('');
        $('#updateStatusModal').modal('show');      
    }
    
        function resetImportForm() {
            $('#stockInModal h5').text('Tạo mới phiếu nhập kho');
            $('#transactionImportId').val('0');
            $('#stockInForm')[0].reset();

            // Reset bảng nguyên liệu
            $('#itemsTable tbody').html(
                '<tr><td colspan="7" class="text-center py-3 muted-color">Chưa có nguyên liệu nào được thêm</td></tr>'
            );

            // Reset tổng tiền
            $('#totalAmount').text('0 ₫');
            $('#transactionDate').val(moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY'));

            // Ngày hết hạn +1 năm
            const expiration = new Date();
            expiration.setFullYear(expiration.getFullYear() + 1);
            const yyyy = expiration.getFullYear();
            const mm = String(expiration.getMonth() + 1).padStart(2, '0');
            const dd = String(expiration.getDate()).padStart(2, '0');
            $('#expirationDate').val(`${yyyy}-${mm}-${dd}`);
        }

        function resetExportForm() {
            $('#stockOutModal h5').text('Tạo mới phiếu xuất kho');
            $('#transactionExportId').val('0');
            $('#stockOutForm')[0].reset();
            $('#outItemsTable tbody').html('<tr><td colspan="7" class="text-center py-3 muted-color">Chưa có nguyên liệu nào được thêm</td></tr>');
            $('#outTotalAmount').text('0 ₫');
            $('#outTransactionDate').val(moment(new Date(), 'DD/MM/YYYY').format('DD/MM/YYYY'));
        }
    async function detailTransactionById(id) {
                var data;
                await $.ajax({
                    url: systemURL + "StockTransaction/api/detail/" + id,
                    method: "GET",
                    success: function (responseData) {
                        data = responseData.data[0];
                    },
                    error: function (e) {
                    },
                });
                return data;
            }

</script>
